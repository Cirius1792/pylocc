"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[763],{3701:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"supported-languages","title":"Supported Languages","description":"This page lists all the programming languages supported by pylocc and their respective configurations.","source":"@site/docs/supported-languages.md","sourceDirName":".","slug":"/supported-languages","permalink":"/pylocc/docs/supported-languages","draft":false,"unlisted":false,"editUrl":"https://github.com/Cirius1792/pylocc/tree/main/docs/docs/supported-languages.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Supported Languages"},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/pylocc/docs/installation"},"next":{"title":"Usage","permalink":"/pylocc/docs/usage"}}');var s=l(4848),c=l(8453);const t={sidebar_position:2,title:"Supported Languages"},o="Supported Languages",a={},r=[{value:"ABAP",id:"abap",level:2},{value:"ABNF",id:"abnf",level:2},{value:"APL",id:"apl",level:2},{value:"ASP",id:"asp",level:2},{value:"ASP.NET",id:"aspnet",level:2},{value:"ATS",id:"ats",level:2},{value:"AWK",id:"awk",level:2},{value:"ActionScript",id:"actionscript",level:2},{value:"Ada",id:"ada",level:2},{value:"Agda",id:"agda",level:2},{value:"Alchemist",id:"alchemist",level:2},{value:"Alex",id:"alex",level:2},{value:"Alloy",id:"alloy",level:2},{value:"Android Interface Definition Language",id:"android-interface-definition-language",level:2},{value:"AppleScript",id:"applescript",level:2},{value:"Arturo",id:"arturo",level:2},{value:"AsciiDoc",id:"asciidoc",level:2},{value:"Assembly",id:"assembly",level:2},{value:"Astro",id:"astro",level:2},{value:"AutoHotKey",id:"autohotkey",level:2},{value:"Autoconf",id:"autoconf",level:2},{value:"Avro",id:"avro",level:2},{value:"BASH",id:"bash",level:2},{value:"Basic",id:"basic",level:2},{value:"Batch",id:"batch",level:2},{value:"Bazel",id:"bazel",level:2},{value:"Bean",id:"bean",level:2},{value:"Bicep",id:"bicep",level:2},{value:"Bitbake",id:"bitbake",level:2},{value:"Bitbucket Pipeline",id:"bitbucket-pipeline",level:2},{value:"Blade template",id:"blade-template",level:2},{value:"Blueprint",id:"blueprint",level:2},{value:"Boo",id:"boo",level:2},{value:"Bosque",id:"bosque",level:2},{value:"Brainfuck",id:"brainfuck",level:2},{value:"BuildStream",id:"buildstream",level:2},{value:"C",id:"c",level:2},{value:"C Header",id:"c-header",level:2},{value:"C Shell",id:"c-shell",level:2},{value:"C#",id:"c-1",level:2},{value:"C++",id:"c-2",level:2},{value:"C++ Header",id:"c-header-1",level:2},{value:"C3",id:"c3",level:2},{value:"CMake",id:"cmake",level:2},{value:"COBOL",id:"cobol",level:2},{value:"CSS",id:"css",level:2},{value:"CSV",id:"csv",level:2},{value:"Cabal",id:"cabal",level:2},{value:"Cairo",id:"cairo",level:2},{value:"Cangjie",id:"cangjie",level:2},{value:"Cap&#39;n Proto",id:"capn-proto",level:2},{value:"Cassius",id:"cassius",level:2},{value:"Ceylon",id:"ceylon",level:2},{value:"Chapel",id:"chapel",level:2},{value:"Circom",id:"circom",level:2},{value:"Clipper",id:"clipper",level:2},{value:"Clojure",id:"clojure",level:2},{value:"ClojureScript",id:"clojurescript",level:2},{value:"Closure Template",id:"closure-template",level:2},{value:"CloudFormation (JSON)",id:"cloudformation-json",level:2},{value:"CloudFormation (YAML)",id:"cloudformation-yaml",level:2},{value:"CodeQL",id:"codeql",level:2},{value:"CoffeeScript",id:"coffeescript",level:2},{value:"Cogent",id:"cogent",level:2},{value:"ColdFusion",id:"coldfusion",level:2},{value:"ColdFusion CFScript",id:"coldfusion-cfscript",level:2},{value:"Coq",id:"coq",level:2},{value:"Creole",id:"creole",level:2},{value:"Crystal",id:"crystal",level:2},{value:"Cuda",id:"cuda",level:2},{value:"Cython",id:"cython",level:2},{value:"D",id:"d",level:2},{value:"DAML",id:"daml",level:2},{value:"DM",id:"dm",level:2},{value:"DOT",id:"dot",level:2},{value:"Dart",id:"dart",level:2},{value:"Device Tree",id:"device-tree",level:2},{value:"Dhall",id:"dhall",level:2},{value:"Docker ignore",id:"docker-ignore",level:2},{value:"Dockerfile",id:"dockerfile",level:2},{value:"Document Type Definition",id:"document-type-definition",level:2},{value:"Elixir",id:"elixir",level:2},{value:"Elixir Template",id:"elixir-template",level:2},{value:"Elm",id:"elm",level:2},{value:"Emacs Dev Env",id:"emacs-dev-env",level:2},{value:"Emacs Lisp",id:"emacs-lisp",level:2},{value:"EmiT",id:"emit",level:2},{value:"Erlang",id:"erlang",level:2},{value:"Expect",id:"expect",level:2},{value:"Extensible Stylesheet Language Transformations",id:"extensible-stylesheet-language-transformations",level:2},{value:"F#",id:"f",level:2},{value:"F*",id:"f-1",level:2},{value:"FIDL",id:"fidl",level:2},{value:"FORTRAN Legacy",id:"fortran-legacy",level:2},{value:"FSL",id:"fsl",level:2},{value:"FXML",id:"fxml",level:2},{value:"Factor",id:"factor",level:2},{value:"Fennel",id:"fennel",level:2},{value:"Fish",id:"fish",level:2},{value:"Flow9",id:"flow9",level:2},{value:"Forth",id:"forth",level:2},{value:"Fortran Modern",id:"fortran-modern",level:2},{value:"Fragment Shader File",id:"fragment-shader-file",level:2},{value:"Freemarker Template",id:"freemarker-template",level:2},{value:"Futhark",id:"futhark",level:2},{value:"GDScript",id:"gdscript",level:2},{value:"GLSL",id:"glsl",level:2},{value:"GN",id:"gn",level:2},{value:"Game Maker Language",id:"game-maker-language",level:2},{value:"Game Maker Project",id:"game-maker-project",level:2},{value:"Gemfile",id:"gemfile",level:2},{value:"Gherkin Specification",id:"gherkin-specification",level:2},{value:"Gleam",id:"gleam",level:2},{value:"Go",id:"go",level:2},{value:"Go Template",id:"go-template",level:2},{value:"Go+",id:"go-1",level:2},{value:"Godot Scene",id:"godot-scene",level:2},{value:"Gradle",id:"gradle",level:2},{value:"GraphQL",id:"graphql",level:2},{value:"Groovy",id:"groovy",level:2},{value:"Gwion",id:"gwion",level:2},{value:"HAML",id:"haml",level:2},{value:"HCL",id:"hcl",level:2},{value:"HEEx",id:"heex",level:2},{value:"HEX",id:"hex",level:2},{value:"HTML",id:"html",level:2},{value:"Hamlet",id:"hamlet",level:2},{value:"Handlebars",id:"handlebars",level:2},{value:"Happy",id:"happy",level:2},{value:"Hare",id:"hare",level:2},{value:"Haskell",id:"haskell",level:2},{value:"Haxe",id:"haxe",level:2},{value:"IDL",id:"idl",level:2},{value:"INI",id:"ini",level:2},{value:"Idris",id:"idris",level:2},{value:"Intel HEX",id:"intel-hex",level:2},{value:"Isabelle",id:"isabelle",level:2},{value:"JAI",id:"jai",level:2},{value:"JCL",id:"jcl",level:2},{value:"JSON",id:"json",level:2},{value:"JSON5",id:"json5",level:2},{value:"JSONC",id:"jsonc",level:2},{value:"JSONL",id:"jsonl",level:2},{value:"JSX",id:"jsx",level:2},{value:"Jade",id:"jade",level:2},{value:"Janet",id:"janet",level:2},{value:"Java",id:"java",level:2},{value:"JavaScript",id:"javascript",level:2},{value:"JavaServer Pages",id:"javaserver-pages",level:2},{value:"Jenkins Buildfile",id:"jenkins-buildfile",level:2},{value:"Jinja",id:"jinja",level:2},{value:"Jsonnet",id:"jsonnet",level:2},{value:"Julia",id:"julia",level:2},{value:"Julius",id:"julius",level:2},{value:"Jupyter",id:"jupyter",level:2},{value:"Just",id:"just",level:2},{value:"K",id:"k",level:2},{value:"Korn Shell",id:"korn-shell",level:2},{value:"Kotlin",id:"kotlin",level:2},{value:"Koto",id:"koto",level:2},{value:"LALRPOP",id:"lalrpop",level:2},{value:"LD Script",id:"ld-script",level:2},{value:"LESS",id:"less",level:2},{value:"LEX",id:"lex",level:2},{value:"LLVM IR",id:"llvm-ir",level:2},{value:"LOLCODE",id:"lolcode",level:2},{value:"LaTeX",id:"latex",level:2},{value:"Lean",id:"lean",level:2},{value:"License",id:"license",level:2},{value:"Lisp",id:"lisp",level:2},{value:"LiveScript",id:"livescript",level:2},{value:"Lua",id:"lua",level:2},{value:"Luau",id:"luau",level:2},{value:"Lucius",id:"lucius",level:2},{value:"Luna",id:"luna",level:2},{value:"MATLAB",id:"matlab",level:2},{value:"MDX",id:"mdx",level:2},{value:"MQL Header",id:"mql-header",level:2},{value:"MQL4",id:"mql4",level:2},{value:"MQL5",id:"mql5",level:2},{value:"MSBuild",id:"msbuild",level:2},{value:"MUMPS",id:"mumps",level:2},{value:"Macromedia eXtensible Markup Language",id:"macromedia-extensible-markup-language",level:2},{value:"Madlang",id:"madlang",level:2},{value:"Makefile",id:"makefile",level:2},{value:"Mako",id:"mako",level:2},{value:"Markdown",id:"markdown",level:2},{value:"Max",id:"max",level:2},{value:"Meson",id:"meson",level:2},{value:"Metal",id:"metal",level:2},{value:"Modula3",id:"modula3",level:2},{value:"Module-Definition",id:"module-definition",level:2},{value:"Monkey C",id:"monkey-c",level:2},{value:"Moonbit",id:"moonbit",level:2},{value:"Mustache",id:"mustache",level:2},{value:"Nial",id:"nial",level:2},{value:"Nim",id:"nim",level:2},{value:"Nix",id:"nix",level:2},{value:"Nushell",id:"nushell",level:2},{value:"OCaml",id:"ocaml",level:2},{value:"Objective C",id:"objective-c",level:2},{value:"Objective C++",id:"objective-c-1",level:2},{value:"Odin",id:"odin",level:2},{value:"Opalang",id:"opalang",level:2},{value:"OpenQASM",id:"openqasm",level:2},{value:"OpenTofu",id:"opentofu",level:2},{value:"Org",id:"org",level:2},{value:"Oz",id:"oz",level:2},{value:"PHP",id:"php",level:2},{value:"PKGBUILD",id:"pkgbuild",level:2},{value:"PL/SQL",id:"plsql",level:2},{value:"PRQL",id:"prql",level:2},{value:"PSL Assertion",id:"psl-assertion",level:2},{value:"Pascal",id:"pascal",level:2},{value:"Patch",id:"patch",level:2},{value:"Perl",id:"perl",level:2},{value:"Phoenix LiveView",id:"phoenix-liveview",level:2},{value:"Picat",id:"picat",level:2},{value:"Pkl",id:"pkl",level:2},{value:"Plain Text",id:"plain-text",level:2},{value:"Polly",id:"polly",level:2},{value:"Pony",id:"pony",level:2},{value:"PostScript",id:"postscript",level:2},{value:"Powershell",id:"powershell",level:2},{value:"Processing",id:"processing",level:2},{value:"Prolog",id:"prolog",level:2},{value:"Properties File",id:"properties-file",level:2},{value:"Protocol Buffers",id:"protocol-buffers",level:2},{value:"Puppet",id:"puppet",level:2},{value:"PureScript",id:"purescript",level:2},{value:"Python",id:"python",level:2},{value:"Q#",id:"q",level:2},{value:"QCL",id:"qcl",level:2},{value:"QML",id:"qml",level:2},{value:"R",id:"r",level:2},{value:"RAML",id:"raml",level:2},{value:"Racket",id:"racket",level:2},{value:"Rakefile",id:"rakefile",level:2},{value:"Raku",id:"raku",level:2},{value:"Razor",id:"razor",level:2},{value:"ReScript",id:"rescript",level:2},{value:"ReStructuredText",id:"restructuredtext",level:2},{value:"ReasonML",id:"reasonml",level:2},{value:"Redscript",id:"redscript",level:2},{value:"Report Definition Language",id:"report-definition-language",level:2},{value:"Robot Framework",id:"robot-framework",level:2},{value:"Ruby",id:"ruby",level:2},{value:"Ruby HTML",id:"ruby-html",level:2},{value:"Rust",id:"rust",level:2},{value:"SAS",id:"sas",level:2},{value:"SKILL",id:"skill",level:2},{value:"SNOBOL",id:"snobol",level:2},{value:"SPDX",id:"spdx",level:2},{value:"SPL",id:"spl",level:2},{value:"SQL",id:"sql",level:2},{value:"SRecode Template",id:"srecode-template",level:2},{value:"SVG",id:"svg",level:2},{value:"Sass",id:"sass",level:2},{value:"Scala",id:"scala",level:2},{value:"Scallop",id:"scallop",level:2},{value:"Scheme",id:"scheme",level:2},{value:"Scons",id:"scons",level:2},{value:"Shell",id:"shell",level:2},{value:"Sieve",id:"sieve",level:2},{value:"Slang",id:"slang",level:2},{value:"Slint",id:"slint",level:2},{value:"Smalltalk",id:"smalltalk",level:2},{value:"Smarty Template",id:"smarty-template",level:2},{value:"Snakemake",id:"snakemake",level:2},{value:"Softbridge Basic",id:"softbridge-basic",level:2},{value:"Solidity",id:"solidity",level:2},{value:"Specman e",id:"specman-e",level:2},{value:"Spice Netlist",id:"spice-netlist",level:2},{value:"Stan",id:"stan",level:2},{value:"Standard ML (SML)",id:"standard-ml-sml",level:2},{value:"Stata",id:"stata",level:2},{value:"Stylus",id:"stylus",level:2},{value:"Svelte",id:"svelte",level:2},{value:"Swift",id:"swift",level:2},{value:"Swig",id:"swig",level:2},{value:"SystemVerilog",id:"systemverilog",level:2},{value:"Systemd",id:"systemd",level:2},{value:"TCL",id:"tcl",level:2},{value:"TL",id:"tl",level:2},{value:"TOML",id:"toml",level:2},{value:"TTCN-3",id:"ttcn-3",level:2},{value:"Tact",id:"tact",level:2},{value:"TaskPaper",id:"taskpaper",level:2},{value:"TeX",id:"tex",level:2},{value:"Teal",id:"teal",level:2},{value:"Templ",id:"templ",level:2},{value:"TemplateToolkit",id:"templatetoolkit",level:2},{value:"Tera",id:"tera",level:2},{value:"Terraform",id:"terraform",level:2},{value:"Textile",id:"textile",level:2},{value:"Thrift",id:"thrift",level:2},{value:"Treetop",id:"treetop",level:2},{value:"Twig Template",id:"twig-template",level:2},{value:"TypeScript",id:"typescript",level:2},{value:"TypeScript Typings",id:"typescript-typings",level:2},{value:"TypeSpec",id:"typespec",level:2},{value:"Typst",id:"typst",level:2},{value:"Unreal Script",id:"unreal-script",level:2},{value:"Up",id:"up",level:2},{value:"Ur/Web",id:"urweb",level:2},{value:"Ur/Web Project",id:"urweb-project",level:2},{value:"V",id:"v",level:2},{value:"VHDL",id:"vhdl",level:2},{value:"Vala",id:"vala",level:2},{value:"Varnish Configuration",id:"varnish-configuration",level:2},{value:"Verilog",id:"verilog",level:2},{value:"Verilog Args File",id:"verilog-args-file",level:2},{value:"Vertex Shader File",id:"vertex-shader-file",level:2},{value:"Vim Script",id:"vim-script",level:2},{value:"Visual Basic",id:"visual-basic",level:2},{value:"Visual Basic for Applications",id:"visual-basic-for-applications",level:2},{value:"Vue",id:"vue",level:2},{value:"W.I.S.E. Jobfile",id:"wise-jobfile",level:2},{value:"Web Services Description Language",id:"web-services-description-language",level:2},{value:"WebGPU Shading Language",id:"webgpu-shading-language",level:2},{value:"Windows Resource-Definition Script",id:"windows-resource-definition-script",level:2},{value:"Wolfram",id:"wolfram",level:2},{value:"Wren",id:"wren",level:2},{value:"XAML",id:"xaml",level:2},{value:"XML",id:"xml",level:2},{value:"XML Schema",id:"xml-schema",level:2},{value:"XMake",id:"xmake",level:2},{value:"Xcode Config",id:"xcode-config",level:2},{value:"Xtend",id:"xtend",level:2},{value:"YAML",id:"yaml",level:2},{value:"Yarn",id:"yarn",level:2},{value:"Zig",id:"zig",level:2},{value:"ZoKrates",id:"zokrates",level:2},{value:"Zsh",id:"zsh",level:2},{value:"bait",id:"bait",level:2},{value:"gitignore",id:"gitignore",level:2},{value:"hoon",id:"hoon",level:2},{value:"ignore",id:"ignore",level:2},{value:"jq",id:"jq",level:2},{value:"m4",id:"m4",level:2},{value:"nuspec",id:"nuspec",level:2},{value:"sed",id:"sed",level:2},{value:"wenyan",id:"wenyan",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"supported-languages",children:"Supported Languages"})}),"\n",(0,s.jsxs)(e.p,{children:["This page lists all the programming languages supported by ",(0,s.jsx)(e.code,{children:"pylocc"})," and their respective configurations."]}),"\n",(0,s.jsx)(e.h2,{id:"abap",children:"ABAP"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ABAP": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "abap"\n    ],\n    "line_comment": [\n      "*",\n      "\\\\\\""\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"abnf",children:"ABNF"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ABNF": {\n    "complexitychecks": [\n      "=/ ",\n      "/ ",\n      "% ",\n      "( "\n    ],\n    "extensions": [\n      "abnf"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"apl",children:"APL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "APL": {\n    "complexitychecks": [\n      ":For ",\n      ":If ",\n      ":Case ",\n      ":CaseList ",\n      ":While ",\n      ":Repeat ",\n      ":Else ",\n      "\\u2228",\n      "\\u2227",\n      "\\u2260",\n      "~",\n      "\\u00a8",\n      "=",\n      ":"\n    ],\n    "extensions": [\n      "apl",\n      "aplf",\n      "apln",\n      "aplc",\n      "dyalog"\n    ],\n    "line_comment": [\n      "\\u235d"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"asp",children:"ASP"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ASP": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "asa",\n      "asp"\n    ],\n    "line_comment": [\n      "\'",\n      "REM"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"aspnet",children:"ASP.NET"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ASP.NET": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "asax",\n      "ascx",\n      "asmx",\n      "aspx",\n      "master",\n      "sitemap",\n      "webinfo"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ],\n      [\n        "<%--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ats",children:"ATS"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ATS": {\n    "complexitychecks": [\n      "if ",\n      "if(",\n      " then ",\n      " else ",\n      "case+ ",\n      "ifcase",\n      "let ",\n      "and "\n    ],\n    "extensions": [\n      "dats",\n      "sats",\n      "ats",\n      "hats"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ],\n      [\n        "(*",\n        "*)"\n      ],\n      [\n        "////",\n        "THISSHOULDNEVERAPPEARWEHOPE"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"awk",children:"AWK"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "AWK": {\n    "complexitychecks": [\n      "else ",\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "while ",\n      "while(",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "awk"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ],\n    "shebangs": [\n      "awk",\n      "gawk",\n      "mawk",\n      "nawk"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"actionscript",children:"ActionScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ActionScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "as"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ada",children:"Ada"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Ada": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ada",\n      "adb",\n      "ads",\n      "pad"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"agda",children:"Agda"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Agda": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "agda"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{-",\n        "-}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"alchemist",children:"Alchemist"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Alchemist": {\n    "complexitychecks": [\n      "+",\n      "->",\n      "!"\n    ],\n    "extensions": [\n      "crn"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"alex",children:"Alex"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Alex": {\n    "complexitychecks": [],\n    "extensions": [\n      "x"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"alloy",children:"Alloy"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Alloy": {\n    "complexitychecks": [\n      "implies ",\n      "else ",\n      "for ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "<= ",\n      ">= "\n    ],\n    "extensions": [\n      "als"\n    ],\n    "line_comment": [\n      "//",\n      "--"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"android-interface-definition-language",children:"Android Interface Definition Language"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Android Interface Definition Language": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "aidl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/**",\n        "*/"\n      ],\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"applescript",children:"AppleScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "AppleScript": {\n    "complexitychecks": [\n      "considering ",\n      "ignoring ",\n      "repeat ",\n      "while ",\n      "if ",\n      "else ",\n      "else if ",\n      "try ",\n      "on error ",\n      "and ",\n      "or "\n    ],\n    "extensions": [\n      "applescript"\n    ],\n    "line_comment": [\n      "#",\n      "--"\n    ],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ],\n    "shebangs": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"arturo",children:"Arturo"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Arturo": {\n    "complexitychecks": [\n      "loop ",\n      "map ",\n      "select ",\n      "if ",\n      "if? ",\n      "while ",\n      "function ",\n      "or? ",\n      "and? ",\n      "not? ",\n      "<> ",\n      "= "\n    ],\n    "extensions": [\n      "art"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"asciidoc",children:"AsciiDoc"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "AsciiDoc": {\n    "complexitychecks": [],\n    "extensions": [\n      "adoc"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"assembly",children:"Assembly"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Assembly": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "s",\n      "asm"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"astro",children:"Astro"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Astro": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      ".map"\n    ],\n    "extensions": [\n      "astro"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ],\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"autohotkey",children:"AutoHotKey"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "AutoHotKey": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ahk"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"autoconf",children:"Autoconf"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Autoconf": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "in"\n    ],\n    "line_comment": [\n      "#",\n      "dnl"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"avro",children:"Avro"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Avro": {\n    "complexitychecks": [],\n    "extensions": [\n      "avdl",\n      "avpr",\n      "avsc"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"bash",children:"BASH"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "BASH": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "bash",\n      "bash_login",\n      "bash_logout",\n      "bash_profile",\n      "bashrc"\n    ],\n    "filenames": [\n      ".bash_login",\n      ".bash_logout",\n      ".bash_profile",\n      ".bashrc"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "bash"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"basic",children:"Basic"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Basic": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "elseif ",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "bas"\n    ],\n    "line_comment": [\n      "\'"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"batch",children:"Batch"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Batch": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "bat",\n      "btm",\n      "cmd"\n    ],\n    "line_comment": [\n      "REM",\n      "::"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"bazel",children:"Bazel"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Bazel": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "bzl",\n      "build.bazel",\n      "build",\n      "workspace"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"bean",children:"Bean"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Bean": {\n    "complexitychecks": [],\n    "extensions": [\n      "bean",\n      "beancount"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"bicep",children:"Bicep"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Bicep": {\n    "complexitychecks": [\n      "@minLength(",\n      "@maxLength(",\n      "@secure(",\n      "[for ",\n      "if(",\n      "if (",\n      " == ",\n      " != ",\n      " ? ",\n      "using ",\n      "range(",\n      "type ",\n      "func "\n    ],\n    "extensions": [\n      "bicep"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"bitbake",children:"Bitbake"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Bitbake": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "bb",\n      "bbappend",\n      "bbclass"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"bitbucket-pipeline",children:"Bitbucket Pipeline"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Bitbucket Pipeline": {\n    "complexitychecks": [],\n    "extensions": [\n      "bitbucket-pipelines.yml"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"blade-template",children:"Blade template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Blade template": {\n    "complexitychecks": [\n      "@for ",\n      "@for(",\n      "@foreach ",\n      "@foreach(",\n      "@forelse ",\n      "@forelse(",\n      "@each ",\n      "@each (",\n      "@while ",\n      "@while(",\n      "@if ",\n      "@if(",\n      "@unless ",\n      "@unless(",\n      "@isset ",\n      "@isset(",\n      "@empty ",\n      "@empty(",\n      "@else ",\n      "@elseif ",\n      "@elseif(",\n      "@while ",\n      "@while(",\n      "@switch ",\n      "@switch (",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "blade.php"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "{{--",\n        "--}}"\n      ],\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"blueprint",children:"Blueprint"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Blueprint": {\n    "complexitychecks": [],\n    "extensions": [\n      "blp"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"boo",children:"Boo"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Boo": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "elif ",\n      "unless ",\n      " and ",\n      "for ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "boo"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"bosque",children:"Bosque"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Bosque": {\n    "complexitychecks": [\n      "if ",\n      "if(",\n      "switch ",\n      "match ",\n      "case ",\n      "| ",\n      "|| ",\n      "& ",\n      "&& ",\n      "!= ",\n      "!== ",\n      "== ",\n      "=== "\n    ],\n    "extensions": [\n      "bsq"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"brainfuck",children:"Brainfuck"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Brainfuck": {\n    "complexitychecks": [\n      "[",\n      "]",\n      "<",\n      ">",\n      "+",\n      "-",\n      ".",\n      ","\n    ],\n    "extensions": [\n      "bf"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"buildstream",children:"BuildStream"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "BuildStream": {\n    "complexitychecks": [],\n    "extensions": [\n      "bst"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"c",children:"C"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "C": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "c",\n      "ec",\n      "pgc"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"c-header",children:"C Header"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "C Header": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "case ",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "h"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"c-shell",children:"C Shell"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "C Shell": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "csh"\n    ],\n    "filenames": [\n      ".cshrc"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [],\n    "shebangs": [\n      "csh",\n      "tcsh"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"c-1",children:"C#"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "C#": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "foreach ",\n      "foreach(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cs",\n      "csx"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "ignoreEscape": true,\n        "start": "@\\""\n      },\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ],\n    "shebangs": [\n      "dotnet"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"c-2",children:"C++"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "C++": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cc",\n      "cpp",\n      "cxx",\n      "c++",\n      "pcc",\n      "ino",\n      "ccm",\n      "cppm",\n      "cxxm",\n      "c++m",\n      "mxx"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"c-header-1",children:"C++ Header"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "C++ Header": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "hh",\n      "hpp",\n      "hxx",\n      "inl",\n      "ipp",\n      "ixx"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"c3",children:"C3"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "C3": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "foreach ",\n      "foreach(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "case ",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "defer ",\n      "macro "\n    ],\n    "extensions": [\n      "c3"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ],\n      [\n        "<*",\n        "*>"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "`",\n        "ignoreEscape": true,\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cmake",children:"CMake"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "CMake": {\n    "complexitychecks": [\n      "foreach ",\n      "foreach(",\n      "if ",\n      "if(",\n      "elseif ",\n      "elseif(",\n      "while ",\n      "while(",\n      "else ",\n      "else(",\n      "OR ",\n      "AND ",\n      "EQUAL ",\n      "STREQUAL ",\n      "VERSION_EQUAL ",\n      "PATH_EQUAL "\n    ],\n    "extensions": [\n      "cmake",\n      "cmakelists.txt"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "#[[",\n        "]]"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cobol",children:"COBOL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "COBOL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cob",\n      "cbl",\n      "ccp",\n      "cobol",\n      "cpy"\n    ],\n    "line_comment": [\n      "*"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"css",children:"CSS"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "CSS": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "css"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"csv",children:"CSV"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "CSV": {\n    "complexitychecks": [],\n    "extensions": [\n      "csv"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cabal",children:"Cabal"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Cabal": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cabal"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{-",\n        "-}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cairo",children:"Cairo"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Cairo": {\n    "complexitychecks": [\n      "loop ",\n      "if ",\n      "if(",\n      "match ",\n      "match(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cairo"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cangjie",children:"Cangjie"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Cangjie": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cj"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      },\n      {\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"capn-proto",children:"Cap'n Proto"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Cap\'n Proto": {\n    "complexitychecks": [],\n    "extensions": [\n      "capnp"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cassius",children:"Cassius"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Cassius": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cassius"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ceylon",children:"Ceylon"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Ceylon": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ceylon"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"chapel",children:"Chapel"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Chapel": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "switch ",\n      "while ",\n      "else ",\n      "do ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "chpl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"circom",children:"Circom"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Circom": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "while(",\n      "else ",\n      "else(",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "circom"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"clipper",children:"Clipper"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Clipper": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "do while ",\n      "while ",\n      "else ",\n      "elseif ",\n      "else(",\n      "switch ",\n      "case ",\n      "otherwise ",\n      "begin sequence ",\n      "end sequence ",\n      "begin sequence(",\n      "try ",\n      "catch ",\n      "finally ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "prg",\n      "ch"\n    ],\n    "line_comment": [\n      "//",\n      "&&"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"clojure",children:"Clojure"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Clojure": {\n    "complexitychecks": [\n      "(for ",\n      "(when ",\n      "(loop ",\n      "(doseq ",\n      "(cond ",\n      "(if",\n      "(if-not ",\n      "(and ",\n      "(or ",\n      "(not ",\n      "(= ",\n      "(not= ",\n      "(recur "\n    ],\n    "extensions": [\n      "clj",\n      "cljc"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"clojurescript",children:"ClojureScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ClojureScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cljs"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"closure-template",children:"Closure Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Closure Template": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      ">= ",\n      "<= ",\n      "?: ",\n      "? : "\n    ],\n    "extensions": [\n      "soy"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/**",\n        "*/"\n      ],\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cloudformation-json",children:"CloudFormation (JSON)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "CloudFormation (JSON)": {\n    "complexitychecks": [\n      "!GetAtt",\n      "!Sub",\n      "!Select",\n      "!Equals",\n      "!If",\n      "DependsOn:",\n      "!Select",\n      "!Equals",\n      "!If",\n      "Fn::If",\n      "Fn::And",\n      "Fn::Equals",\n      "Fn::Not",\n      "Fn::Or",\n      "Fn::Base64",\n      "Fn::Cidr",\n      "Fn::FindInMap",\n      "Fn::GetAtt",\n      "Fn::GetAZs",\n      "Fn::ImportValue",\n      "Fn::Join",\n      "Fn::Select",\n      "Fn::Split",\n      "Fn::Sub",\n      "Fn::Transform"\n    ],\n    "extensions": [\n      "json"\n    ],\n    "keywords": [\n      "\\"AWSTemplateFormatVersion\\"",\n      "AWS::",\n      "!GetAtt",\n      "!Sub",\n      "\\"DependsOn\\"",\n      "!Select",\n      "!Equals",\n      "!If",\n      "Fn::If",\n      "Fn::And",\n      "Fn::Equals",\n      "Fn::Not",\n      "Fn::Or",\n      "Fn::Base64",\n      "Fn::Cidr",\n      "Fn::FindInMap",\n      "Fn::GetAtt",\n      "Fn::GetAZs",\n      "Fn::ImportValue",\n      "Fn::Join",\n      "Fn::Select",\n      "Fn::Split",\n      "Fn::Sub",\n      "Fn::Transform"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cloudformation-yaml",children:"CloudFormation (YAML)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "CloudFormation (YAML)": {\n    "complexitychecks": [\n      "!GetAtt",\n      "!Sub",\n      "!Select",\n      "!Equals",\n      "!If",\n      "DependsOn:",\n      "!Select",\n      "!Equals",\n      "!If",\n      "Fn::If",\n      "Fn::And",\n      "Fn::Equals",\n      "Fn::Not",\n      "Fn::Or",\n      "Fn::Base64",\n      "Fn::Cidr",\n      "Fn::FindInMap",\n      "Fn::GetAtt",\n      "Fn::GetAZs",\n      "Fn::ImportValue",\n      "Fn::Join",\n      "Fn::Select",\n      "Fn::Split",\n      "Fn::Sub",\n      "Fn::Transform"\n    ],\n    "extensions": [\n      "yaml",\n      "yml"\n    ],\n    "keywords": [\n      "Resources:",\n      "AWSTemplateFormatVersion:",\n      "Description:",\n      "AWS::",\n      "Properties:",\n      "Name:",\n      "Type:",\n      "!GetAtt",\n      "!Sub",\n      "Statement:",\n      "Ref:",\n      "DependsOn:",\n      "!Select",\n      "!Equals",\n      "!If",\n      "Fn::If",\n      "Fn::And",\n      "Fn::Equals",\n      "Fn::Not",\n      "Fn::Or",\n      "Fn::Base64",\n      "Fn::Cidr",\n      "Fn::FindInMap",\n      "Fn::GetAtt",\n      "Fn::GetAZs",\n      "Fn::ImportValue",\n      "Fn::Join",\n      "Fn::Select",\n      "Fn::Split",\n      "Fn::Sub",\n      "Fn::Transform"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"codeql",children:"CodeQL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "CodeQL": {\n    "complexitychecks": [\n      "and ",\n      "or ",\n      "implies ",\n      "if ",\n      "else ",\n      "not ",\n      "instanceof ",\n      "in ",\n      "exists(",\n      "forall( ",\n      "avg(",\n      "concat(",\n      "count(",\n      "max(",\n      "min(",\n      "rank(",\n      "strictconcat(",\n      "strictcount(",\n      "strictsum(",\n      "sum("\n    ],\n    "extensions": [\n      "ql",\n      "qll"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"coffeescript",children:"CoffeeScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "CoffeeScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "coffee"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "###",\n        "###"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cogent",children:"Cogent"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Cogent": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cogent"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"coldfusion",children:"ColdFusion"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ColdFusion": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cfm"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!---",\n        "---\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"coldfusion-cfscript",children:"ColdFusion CFScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ColdFusion CFScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cfc"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"coq",children:"Coq"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Coq": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "v"\n    ],\n    "keywords": [\n      "Require",\n      "Hypothesis",\n      "Inductive",\n      "Remark",\n      "Lemma",\n      "Proof",\n      "Definition",\n      "Theorem",\n      "Class",\n      "Instance",\n      "Module",\n      "Context",\n      "Section",\n      "Notation",\n      "End",\n      "Fixpoint",\n      "From Coq"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"creole",children:"Creole"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Creole": {\n    "complexitychecks": [],\n    "extensions": [\n      "creole"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"crystal",children:"Crystal"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Crystal": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cr"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cuda",children:"Cuda"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Cuda": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cu"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"cython",children:"Cython"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Cython": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "and ",\n      "or ",\n      "not ",\n      "in "\n    ],\n    "extensions": [\n      "pyx",\n      "pxi",\n      "pxd"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\\\\\"\\\\\\"\\\\\\"",\n        "start": "\\\\\\"\\\\\\"\\\\\\""\n      },\n      {\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"d",children:"D"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "D": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "d"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ],\n      [\n        "/+",\n        "+/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "rdmd"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"daml",children:"DAML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "DAML": {\n    "complexitychecks": [\n      "if ",\n      "then ",\n      "else ",\n      "|| ",\n      "&& ",\n      "/= ",\n      "== ",\n      "case ",\n      "do {",\n      "forall "\n    ],\n    "extensions": [\n      "daml"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{-",\n        "-}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"dm",children:"DM"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "DM": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "while ",\n      "while(",\n      "else ",\n      "||",\n      "&&",\n      "!=",\n      "<>",\n      "==",\n      "in "\n    ],\n    "extensions": [\n      "dm"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"dot",children:"DOT"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "DOT": {\n    "complexitychecks": [],\n    "extensions": [\n      "dot",\n      "gv"\n    ],\n    "line_comment": [\n      "//",\n      "#"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"dart",children:"Dart"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Dart": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "dart"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"device-tree",children:"Device Tree"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Device Tree": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "dts",\n      "dtsi"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"dhall",children:"Dhall"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Dhall": {\n    "complexitychecks": [],\n    "extensions": [\n      "dhall"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{-",\n        "-}"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"docker-ignore",children:"Docker ignore"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Docker ignore": {\n    "complexitychecks": [],\n    "extensions": [],\n    "filenames": [\n      ".dockerignore"\n    ],\n    "line_comment": [\n      "#",\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Dockerfile": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "dockerfile"\n    ],\n    "filenames": [\n      "dockerfile"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"document-type-definition",children:"Document Type Definition"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Document Type Definition": {\n    "complexitychecks": [],\n    "extensions": [\n      "dtd"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"elixir",children:"Elixir"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Elixir": {\n    "complexitychecks": [\n      "case ",\n      "cond ",\n      "if ",\n      "for ",\n      "with ",\n      "try ",\n      "catch ",\n      "rescue ",\n      "else ",\n      "and ",\n      "or ",\n      "not ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "|> "\n    ],\n    "extensions": [\n      "ex",\n      "exs"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      },\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"elixir-template",children:"Elixir Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Elixir Template": {\n    "complexitychecks": [\n      "case ",\n      "cond ",\n      "if ",\n      "for ",\n      "with ",\n      "try ",\n      "catch ",\n      "rescue ",\n      "else ",\n      "and ",\n      "or ",\n      "not ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "|> ",\n      "<% "\n    ],\n    "extensions": [\n      "eex"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      },\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"elm",children:"Elm"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Elm": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "case ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "elm"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{-",\n        "-}"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"emacs-dev-env",children:"Emacs Dev Env"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Emacs Dev Env": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ede"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"emacs-lisp",children:"Emacs Lisp"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Emacs Lisp": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "el"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"emit",children:"EmiT"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "EmiT": {\n    "complexitychecks": [\n      "if ",\n      "if(",\n      "warp ",\n      "time ",\n      "kills ",\n      "collapse ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "emit"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"erlang",children:"Erlang"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Erlang": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "erl",\n      "hrl"\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "multi_line": [],\n    "quotes": [],\n    "shebangs": [\n      "escript"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"expect",children:"Expect"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Expect": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "exp"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"extensible-stylesheet-language-transformations",children:"Extensible Stylesheet Language Transformations"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Extensible Stylesheet Language Transformations": {\n    "complexitychecks": [],\n    "extensions": [\n      "xslt",\n      "xsl"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"f",children:"F#"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "F#": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "match ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "fs",\n      "fsi",\n      "fsx",\n      "fsscript"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"f-1",children:"F*"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "F*": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "fst"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"fidl",children:"FIDL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "FIDL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "fidl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"fortran-legacy",children:"FORTRAN Legacy"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "FORTRAN Legacy": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "f",\n      "for",\n      "ftn",\n      "f77",\n      "pfo"\n    ],\n    "line_comment": [\n      "c",\n      "C",\n      "!",\n      "*"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"fsl",children:"FSL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "FSL": {\n    "complexitychecks": [\n      "->",\n      "<-"\n    ],\n    "extensions": [\n      "fsl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"fxml",children:"FXML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "FXML": {\n    "extensions": [\n      "fxml"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"factor",children:"Factor"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Factor": {\n    "complexitychecks": [\n      "if",\n      "when",\n      "unless",\n      "if*",\n      "when*",\n      "unless*",\n      "?if",\n      "?",\n      "cond",\n      "case",\n      "cond>quot",\n      "case>quot",\n      "alist>quot",\n      "while",\n      "until",\n      "loop",\n      "0&&",\n      "1&&",\n      "2&&",\n      "3&&",\n      "n&&",\n      "&&",\n      "0||",\n      "1||",\n      "2||",\n      "3||",\n      "n||",\n      "||",\n      "and",\n      "or",\n      "xor",\n      "eq",\n      "=",\n      "smart-if",\n      "smart-if*",\n      "smart-when",\n      "smart-when*",\n      "smart-unless",\n      "smart-unless*"\n    ],\n    "extensions": [\n      "factor"\n    ],\n    "line_comment": [\n      "!"\n    ],\n    "multi_line": [\n      [\n        "![[",\n        "]]"\n      ],\n      [\n        "![=[",\n        "]=]"\n      ],\n      [\n        "![==[",\n        "]==]"\n      ],\n      [\n        "![===[",\n        "]===]"\n      ],\n      [\n        "![====[",\n        "]====]"\n      ],\n      [\n        "![=====[",\n        "]=====]"\n      ],\n      [\n        "![======[",\n        "]======]"\n      ],\n      [\n        "/*",\n        "*/"\n      ],\n      [\n        "((",\n        "))"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": ";",\n        "start": "STRING:"\n      },\n      {\n        "end": "]======]",\n        "start": "[======["\n      },\n      {\n        "end": "]====]",\n        "start": "[=====["\n      },\n      {\n        "end": "]====]",\n        "start": "[====["\n      },\n      {\n        "end": "]===]",\n        "start": "[===["\n      },\n      {\n        "end": "]==]",\n        "start": "[==["\n      },\n      {\n        "end": "]=]",\n        "start": "[=["\n      },\n      {\n        "end": "]]",\n        "start": "[["\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"fennel",children:"Fennel"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Fennel": {\n    "complexitychecks": [\n      "(for",\n      "(each",\n      "(if",\n      "(when",\n      "(while",\n      "(switch",\n      "(do",\n      "(..",\n      "(=",\n      "(and",\n      "(or"\n    ],\n    "extensions": [\n      "fnl"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": ","\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"fish",children:"Fish"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Fish": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "fish"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "fish"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"flow9",children:"Flow9"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Flow9": {\n    "complexitychecks": [\n      "if ",\n      "if(",\n      "else ",\n      "else{",\n      "fori ",\n      "fori(",\n      "switch ",\n      "switch(",\n      "fold ",\n      "fold(",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "|> "\n    ],\n    "extensions": [\n      "flow"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"forth",children:"Forth"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Forth": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "4th",\n      "forth",\n      "fr",\n      "frt",\n      "fth",\n      "f83",\n      "fb",\n      "fpm",\n      "e4",\n      "rx",\n      "ft"\n    ],\n    "line_comment": [\n      "\\\\\\\\"\n    ],\n    "multi_line": [\n      [\n        "( ",\n        ")"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"fortran-modern",children:"Fortran Modern"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Fortran Modern": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "f03",\n      "f08",\n      "f90",\n      "f95"\n    ],\n    "line_comment": [\n      "!"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"fragment-shader-file",children:"Fragment Shader File"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Fragment Shader File": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "fsh"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"freemarker-template",children:"Freemarker Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Freemarker Template": {\n    "complexitychecks": [\n      "<#list ",\n      "<#assign ",\n      "<#if ",\n      "<#elseif ",\n      "<#else>",\n      "<#else> ",\n      "<#switch  ",\n      "<#case ",\n      "<#default>",\n      "<#default> ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ftl"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "<#--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"futhark",children:"Futhark"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Futhark": {\n    "complexitychecks": [\n      "if ",\n      "else ",\n      "then ",\n      "for ",\n      "loop ",\n      "while ",\n      "|| ",\n      "&& ",\n      "!= ",\n      ">= ",\n      "<= "\n    ],\n    "extensions": [\n      "fut"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"gdscript",children:"GDScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "GDScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "gd"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"glsl",children:"GLSL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "GLSL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "vert",\n      "tesc",\n      "tese",\n      "geom",\n      "frag",\n      "comp",\n      "glsl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"gn",children:"GN"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "GN": {\n    "complexitychecks": [\n      "if(",\n      "if (",\n      "else if(",\n      "else if (",\n      "else(",\n      "else (",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "gn",\n      "gni"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"game-maker-language",children:"Game Maker Language"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Game Maker Language": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "repeat ",\n      "repeat(",\n      "|| ",\n      "or ",\n      "&& ",\n      "and ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "gml"\n    ],\n    "line_comment": [\n      "//",\n      "///"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"game-maker-project",children:"Game Maker Project"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Game Maker Project": {\n    "complexitychecks": [],\n    "extensions": [\n      "yyp"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"gemfile",children:"Gemfile"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Gemfile": {\n    "complexitychecks": [],\n    "extensions": [],\n    "filenames": [\n      "gemfile"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"gherkin-specification",children:"Gherkin Specification"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Gherkin Specification": {\n    "complexitychecks": [\n      "given",\n      "when",\n      "then",\n      "and"\n    ],\n    "extensions": [\n      "feature"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"gleam",children:"Gleam"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Gleam": {\n    "complexitychecks": [\n      "fn ",\n      "case ",\n      "-> ",\n      "if "\n    ],\n    "extensions": [\n      "gleam"\n    ],\n    "line_comment": [\n      "//",\n      "///",\n      "////"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"go",children:"Go"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Go": {\n    "complexitychecks": [\n      "go ",\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "select ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "go"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "`",\n        "ignoreEscape": true,\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"go-template",children:"Go Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Go Template": {\n    "complexitychecks": [\n      "{{if ",\n      "{{ if ",\n      "{{else",\n      "{{ else",\n      "{{range ",\n      "{{ range ",\n      "{{with",\n      "{{ with"\n    ],\n    "extensions": [\n      "tmpl",\n      "gohtml",\n      "gotxt"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "{{/*",\n        "*/}}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"go-1",children:"Go+"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Go+": {\n    "complexitychecks": [\n      "go ",\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "select ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "?:"\n    ],\n    "extensions": [\n      "gop"\n    ],\n    "line_comment": [\n      "//",\n      "#"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "`",\n        "ignoreEscape": true,\n        "start": "`"\n      }\n    ],\n    "shebangs": [\n      "gop"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"godot-scene",children:"Godot Scene"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Godot Scene": {\n    "complexitychecks": [],\n    "extensions": [\n      "tscn"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"gradle",children:"Gradle"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Gradle": {\n    "complexitychecks": [],\n    "extensions": [\n      "gradle"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"graphql",children:"GraphQL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "GraphQL": {\n    "complexitychecks": [\n      "type ",\n      "input ",\n      "query ",\n      "mutation ",\n      "subscription ",\n      "directive ",\n      "scalar ",\n      "enum ",\n      "interface ",\n      "union ",\n      "fragment "\n    ],\n    "extensions": [\n      "graphql"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "\\"\\"\\"",\n        "\\"\\"\\""\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "docString": true,\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"groovy",children:"Groovy"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Groovy": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "groovy",\n      "grt",\n      "gtpl",\n      "gvy"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"gwion",children:"Gwion"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Gwion": {\n    "complexitychecks": [\n      "fun ",\n      "while(",\n      "while (",\n      "repeat(",\n      "repeat (",\n      "if (",\n      "if("\n    ],\n    "extensions": [\n      "gw"\n    ],\n    "line_comment": [\n      "#!"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"haml",children:"HAML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "HAML": {\n    "extensions": [\n      "haml"\n    ],\n    "line_comment": [\n      "-#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"hcl",children:"HCL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "HCL": {\n    "complexitychecks": [\n      "for_each ",\n      "for ",\n      "count ",\n      "coalesce(",\n      "== ",\n      "!= ",\n      "> ",\n      "< ",\n      "&& ",\n      "|| "\n    ],\n    "extensions": [\n      "hcl"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"heex",children:"HEEx"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "HEEx": {\n    "complexitychecks": [\n      "case ",\n      "cond ",\n      "if ",\n      "for ",\n      "with ",\n      "try ",\n      "catch ",\n      "rescue ",\n      "else ",\n      "and ",\n      "or ",\n      "not ",\n      "!= ",\n      "== ",\n      "|| ",\n      "&& ",\n      "|> "\n    ],\n    "extensions": [\n      "heex"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "<%!--",\n        "--%>"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"hex",children:"HEX"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "HEX": {\n    "complexitychecks": [],\n    "extensions": [\n      "hex"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"html",children:"HTML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "HTML": {\n    "extensions": [\n      "html",\n      "htm"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"hamlet",children:"Hamlet"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Hamlet": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "hamlet"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"handlebars",children:"Handlebars"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Handlebars": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "hbs",\n      "handlebars"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ],\n      [\n        "{{!",\n        "}}"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"happy",children:"Happy"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Happy": {\n    "complexitychecks": [],\n    "extensions": [\n      "y",\n      "ly"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"hare",children:"Hare"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Hare": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "else ",\n      "match ",\n      "switch ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ha"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "`",\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"haskell",children:"Haskell"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Haskell": {\n    "complexitychecks": [\n      "if ",\n      "then ",\n      "else ",\n      "|| ",\n      "&& ",\n      "/= ",\n      "== ",\n      "case ",\n      "do {",\n      "forall "\n    ],\n    "extensions": [\n      "hs"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{-",\n        "-}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"haxe",children:"Haxe"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Haxe": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "hx"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"idl",children:"IDL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "IDL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "idl",\n      "webidl",\n      "widl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ini",children:"INI"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "INI": {\n    "extensions": [\n      "ini"\n    ],\n    "line_comment": [\n      "#",\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"idris",children:"Idris"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Idris": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "idr",\n      "lidr"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{-",\n        "-}"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\\\\\\"\\\\\\"\\\\\\"",\n        "start": "\\\\\\"\\\\\\"\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"intel-hex",children:"Intel HEX"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Intel HEX": {\n    "complexitychecks": [],\n    "extensions": [\n      "ihex"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"isabelle",children:"Isabelle"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Isabelle": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "thy"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{*",\n        "*}"\n      ],\n      [\n        "(*",\n        "*)"\n      ],\n      [\n        "\\u2039",\n        "\\u203a"\n      ],\n      [\n        "\\\\\\\\<open>",\n        "\\\\\\\\<close>"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\'\'",\n        "start": "\'\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jai",children:"JAI"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JAI": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "jai"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jcl",children:"JCL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JCL": {\n    "complexitychecks": [\n      " IF",\n      " THEN",\n      " ELSE",\n      " PROC=",\n      " PGM=",\n      " DD ",\n      " EXEC ",\n      " JOB ",\n      " COND=",\n      " INCLUDE",\n      " PEND"\n    ],\n    "extensions": [\n      "jcl",\n      "jcls"\n    ],\n    "line_comment": [\n      "//*"\n    ],\n    "quotes": [\n      {\n        "start": "\'",\n        "end": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"json",children:"JSON"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JSON": {\n    "complexitychecks": [],\n    "extensions": [\n      "json"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"json5",children:"JSON5"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JSON5": {\n    "complexitychecks": [],\n    "extensions": [\n      "json5"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jsonc",children:"JSONC"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JSONC": {\n    "complexitychecks": [],\n    "extensions": [\n      "jsonc"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jsonl",children:"JSONL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JSONL": {\n    "complexitychecks": [],\n    "extensions": [\n      "jsonl"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jsx",children:"JSX"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JSX": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "jsx"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jade",children:"Jade"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Jade": {\n    "complexitychecks": [\n      "if ",\n      "else if ",\n      "unless "\n    ],\n    "extensions": [\n      "jade"\n    ],\n    "line_comment": [\n      "//-"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"janet",children:"Janet"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Janet": {\n    "complexitychecks": [\n      "(if ",\n      "(for ",\n      "(for ",\n      "(cond ",\n      "(switch ",\n      "(when ",\n      "(while ",\n      "(loop ",\n      "(case "\n    ],\n    "extensions": [\n      "janet"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "nestedmultiline": false,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "``",\n        "start": "``"\n      },\n      {\n        "end": "\\"",\n        "start": "@\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"java",children:"Java"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Java": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "java"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"javascript",children:"JavaScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JavaScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "?.",\n      "?? ",\n      "??= "\n    ],\n    "extensions": [\n      "js",\n      "cjs",\n      "mjs"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "`",\n        "start": "`"\n      }\n    ],\n    "shebangs": [\n      "node"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"javaserver-pages",children:"JavaServer Pages"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "JavaServer Pages": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "jsp"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jenkins-buildfile",children:"Jenkins Buildfile"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Jenkins Buildfile": {\n    "complexitychecks": [],\n    "extensions": [\n      "jenkinsfile"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jinja",children:"Jinja"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Jinja": {\n    "complexitychecks": [\n      "{% for ",\n      "{%- for ",\n      "{% if ",\n      "{%- if ",\n      "{% else ",\n      "{%- else ",\n      "{% elif ",\n      "{% macro ",\n      "{%- macro ",\n      "{% call ",\n      "{%- call ",\n      "{% filter ",\n      "{%- filter ",\n      "{% set ",\n      "{% include ",\n      "{% from ",\n      "{% extends ",\n      "{% with "\n    ],\n    "extensions": [\n      "jinja",\n      "j2",\n      "jinja2"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "{#",\n        "#}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jsonnet",children:"Jsonnet"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Jsonnet": {\n    "complexitychecks": [\n      "for",\n      "if",\n      "else",\n      "||",\n      "&&",\n      "!=",\n      "=="\n    ],\n    "extensions": [\n      "jsonnet",\n      "libsonnet"\n    ],\n    "line_comment": [\n      "#",\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "|||",\n        "start": "|||"\n      },\n      {\n        "end": "\\"",\n        "start": "@\\""\n      },\n      {\n        "end": "\'",\n        "start": "@\'"\n      }\n    ],\n    "shebangs": [\n      "jsonnet"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"julia",children:"Julia"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Julia": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "while ",\n      "else ",\n      "elseif ",\n      "elseif(",\n      "try ",\n      "catch ",\n      "finally ",\n      "|| ",\n      "&& "\n    ],\n    "extensions": [\n      "jl"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "#=",\n        "=#"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\\\\\\"\\\\\\"\\\\\\"",\n        "start": "\\\\\\"\\\\\\"\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"julius",children:"Julius"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Julius": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "julius"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jupyter",children:"Jupyter"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Jupyter": {\n    "complexitychecks": [],\n    "extensions": [\n      "ipynb",\n      "jpynb"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"just",children:"Just"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Just": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "justfile"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"k",children:"K"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "K": {\n    "complexitychecks": [\n      "\'",\n      "/",\n      "\\\\",\n      "\':",\n      "/:",\n      "\\\\:",\n      "|",\n      "&",\n      "!",\n      "="\n    ],\n    "extensions": [\n      "k"\n    ],\n    "line_comment": [\n      "/"\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"korn-shell",children:"Korn Shell"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Korn Shell": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ksh"\n    ],\n    "filenames": [\n      ".kshrc"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "ksh"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"kotlin",children:"Kotlin"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Kotlin": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "kt",\n      "kts"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"koto",children:"Koto"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Koto": {\n    "complexitychecks": [\n      "for ",\n      "while ",\n      "until ",\n      "continue ",\n      "break ",\n      "loop ",\n      "if ",\n      "switch ",\n      "match ",\n      "then",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "and ",\n      "or ",\n      "not "\n    ],\n    "extensions": [\n      "koto"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "#-",\n        "-#"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"lalrpop",children:"LALRPOP"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "LALRPOP": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "match "\n    ],\n    "extensions": [\n      "lalrpop"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "#\\\\\\"",\n        "start": "\\\\\\"#"\n      },\n      {\n        "end": "r##\\\\\\"",\n        "start": "\\\\\\"##"\n      },\n      {\n        "end": "r#\\\\\\"",\n        "start": "\\\\\\"#"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ld-script",children:"LD Script"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "LD Script": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "lds"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"less",children:"LESS"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "LESS": {\n    "complexitychecks": [],\n    "extensions": [\n      "less"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"lex",children:"LEX"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "LEX": {\n    "complexitychecks": [],\n    "extensions": [\n      "l"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"llvm-ir",children:"LLVM IR"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "LLVM IR": {\n    "complexitychecks": [\n      "llvm.loop",\n      "br ",\n      "switch ",\n      "indirectbr ",\n      "invoke ",\n      "callbr ",\n      "resume ",\n      "catchswitch ",\n      "catchret ",\n      "cleanupret ",\n      "shl ",\n      "lshr ",\n      "ashr ",\n      "and ",\n      "or ",\n      "xor "\n    ],\n    "extensions": [\n      "ll"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ],\n    "shebangs": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"lolcode",children:"LOLCODE"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "LOLCODE": {\n    "complexitychecks": [\n      "AWSUM THX ",\n      "O NOES ",\n      "PLZ OPEN FILE ",\n      "IM IN YR ",\n      "O RLY?",\n      "O RLY? ",\n      "WTF?",\n      "WTF? "\n    ],\n    "extensions": [\n      "lol",\n      "lols"\n    ],\n    "line_comment": [\n      "BTW"\n    ],\n    "multi_line": [\n      [\n        "OBTW",\n        "TLDR"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"latex",children:"LaTeX"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "LaTeX": {\n    "complexitychecks": [],\n    "extensions": [\n      "tex"\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"lean",children:"Lean"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Lean": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "lean",\n      "hlean"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "/-",\n        "-/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"license",children:"License"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "License": {\n    "complexitychecks": [],\n    "extensions": [],\n    "filenames": [\n      "license",\n      "licence",\n      "copying",\n      "copying3",\n      "unlicense",\n      "unlicence",\n      "license-apache",\n      "licence-apache",\n      "license-mit",\n      "licence-mit",\n      "copyright"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"lisp",children:"Lisp"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Lisp": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "lisp",\n      "lsp"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [\n      [\n        "#|",\n        "|#"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [],\n    "shebangs": [\n      "sbcl"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"livescript",children:"LiveScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "LiveScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "case ",\n      "while ",\n      "when ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "!== ",\n      "xor ",\n      "and ",\n      "or ",\n      "|> ",\n      "<< ",\n      "<<< ",\n      "<<<< ",\n      ">> ",\n      "== "\n    ],\n    "extensions": [\n      "ls"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"lua",children:"Lua"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Lua": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "while ",\n      "while(",\n      "else ",\n      "else(",\n      "elseif ",\n      "elseif(",\n      "until ",\n      "until(",\n      "or ",\n      "and ",\n      "~= ",\n      "== "\n    ],\n    "extensions": [\n      "lua"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "--[[",\n        "]]"\n      ],\n      [\n        "--[=[",\n        "]=]"\n      ],\n      [\n        "--[==[",\n        "]==]"\n      ],\n      [\n        "--[===[",\n        "]===]"\n      ],\n      [\n        "--[====[",\n        "]====]"\n      ],\n      [\n        "--[=====[",\n        "]=====]"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "[[",\n        "start": "]]",\n        "ignoreEscape": true\n      }\n    ],\n    "shebangs": [\n      "lua"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"luau",children:"Luau"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Luau": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "while ",\n      "while(",\n      "else ",\n      "else(",\n      "elseif ",\n      "elseif(",\n      "until ",\n      "until(",\n      "or ",\n      "and ",\n      "~= ",\n      "== "\n    ],\n    "extensions": [\n      "luau"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "--[[",\n        "]]"\n      ],\n      [\n        "--[=[",\n        "]=]"\n      ],\n      [\n        "--[==[",\n        "]==]"\n      ],\n      [\n        "--[===[",\n        "]===]"\n      ],\n      [\n        "--[====[",\n        "]====]"\n      ],\n      [\n        "--[=====[",\n        "]=====]"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "`",\n        "start": "`"\n      },\n      {\n        "end": "[[",\n        "start": "]]",\n        "ignoreEscape": true\n      }\n    ],\n    "shebangs": [\n      "luau"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"lucius",children:"Lucius"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Lucius": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "lucius"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"luna",children:"Luna"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Luna": {\n    "complexitychecks": [],\n    "extensions": [\n      "luna"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"matlab",children:"MATLAB"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "MATLAB": {\n    "complexitychecks": [\n      "if ",\n      "elseif ",\n      "case ",\n      "otherwise ",\n      "try",\n      "for ",\n      "while "\n    ],\n    "extensions": [\n      "m"\n    ],\n    "keywords": [\n      "eye(",\n      "zeros(",\n      "ones(",\n      "transpose(",\n      "meshgrid(",\n      "mod(",\n      "classdef",\n      "function",\n      "disp(",\n      "sin(",\n      "tan(",\n      "cos(",\n      "plot",\n      "sqrt(",\n      "deblank(",\n      "findstr(",\n      "strrep(",\n      "strcmp(",\n      "display(",\n      "strcat(",\n      "iscellstr(",\n      "strfind(",\n      "%",\n      "fprintf("\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "multi_line": [\n      [\n        "%{",\n        "}%"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"mdx",children:"MDX"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "MDX": {\n    "complexitychecks": [],\n    "extensions": [\n      "mdx"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"mql-header",children:"MQL Header"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "MQL Header": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "mqh"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"mql4",children:"MQL4"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "MQL4": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "mq4"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"mql5",children:"MQL5"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "MQL5": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "mq5"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"msbuild",children:"MSBuild"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "MSBuild": {\n    "complexitychecks": [\n      "Condition"\n    ],\n    "extensions": [\n      "csproj",\n      "vbproj",\n      "fsproj",\n      "vcproj",\n      "vcxproj",\n      "vcxproj.filters",\n      "ilproj",\n      "myapp",\n      "props",\n      "rdlc",\n      "resx",\n      "settings",\n      "sln",\n      "targets"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"mumps",children:"MUMPS"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "MUMPS": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "mps"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"macromedia-extensible-markup-language",children:"Macromedia eXtensible Markup Language"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Macromedia eXtensible Markup Language": {\n    "complexitychecks": [],\n    "extensions": [\n      "mxml"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"madlang",children:"Madlang"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Madlang": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "mad"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "{#",\n        "#}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"makefile",children:"Makefile"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Makefile": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "makefile",\n      "mak",\n      "mk",\n      "bp"\n    ],\n    "filenames": [\n      "makefile",\n      "gnumakefile"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"mako",children:"Mako"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Mako": {\n    "complexitychecks": [\n      "% for ",\n      "% if ",\n      "% else ",\n      "% elif ",\n      "<% include ",\n      "<%def ",\n      "<%page ",\n      "<%def ",\n      "<%block ",\n      "<%namespace ",\n      "<%inherit "\n    ],\n    "extensions": [\n      "mako",\n      "mao"\n    ],\n    "line_comment": [\n      "##"\n    ],\n    "multi_line": [\n      [\n        "<%doc>",\n        "</%doc>"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"markdown",children:"Markdown"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Markdown": {\n    "complexitychecks": [],\n    "extensions": [\n      "md",\n      "markdown"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"max",children:"Max"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Max": {\n    "complexitychecks": [],\n    "extensions": [\n      "maxpat"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"meson",children:"Meson"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Meson": {\n    "complexitychecks": [\n      "foreach ",\n      "if ",\n      "elif ",\n      "unless ",\n      "and ",\n      "or ",\n      "else "\n    ],\n    "extensions": [\n      "meson.build",\n      "meson_options.txt"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"metal",children:"Metal"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Metal": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "metal"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"modula3",children:"Modula3"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Modula3": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "m3",\n      "mg",\n      "ig",\n      "i3"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"module-definition",children:"Module-Definition"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Module-Definition": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "def"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"monkey-c",children:"Monkey C"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Monkey C": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "mc"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"moonbit",children:"Moonbit"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Moonbit": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "switch ",\n      "while ",\n      "else ",\n      "loop ",\n      "guard ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "match "\n    ],\n    "extensions": [\n      "mbt"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"mustache",children:"Mustache"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Mustache": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "mustache"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "{{!",\n        "}}"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"nial",children:"Nial"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Nial": {\n    "complexitychecks": [\n      "case ",\n      "for ",\n      "if ",\n      "repeat ",\n      "while ",\n      "or ",\n      "and ",\n      "= ",\n      "equal ",\n      "~= ",\n      "unequal "\n    ],\n    "extensions": [\n      "ndf"\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"nim",children:"Nim"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Nim": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "nim"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\\\\\\"\\\\\\"\\\\\\"",\n        "start": "\\\\\\"\\\\\\"\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"nix",children:"Nix"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Nix": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "nix"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"nushell",children:"Nushell"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Nushell": {\n    "complexitychecks": [\n      "for ",\n      "do { ",\n      "each {",\n      "if ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "nu"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "nu"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ocaml",children:"OCaml"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "OCaml": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ml",\n      "mli"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"objective-c",children:"Objective C"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Objective C": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "m"\n    ],\n    "keywords": [\n      "#include",\n      "printf",\n      "stdio.h",\n      ".h",\n      "@import",\n      "@interface",\n      "@property",\n      "@implementation",\n      "NSArray",\n      "#pragma",\n      "static",\n      "const",\n      "atomic",\n      "@end",\n      "//"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"objective-c-1",children:"Objective C++"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Objective C++": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "mm"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"odin",children:"Odin"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Odin": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "when ",\n      "switch ",\n      "defer ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "odin"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"opalang",children:"Opalang"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Opalang": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "opa"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"openqasm",children:"OpenQASM"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "OpenQASM": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "while ",\n      "while(",\n      "else ",\n      "else(",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "qasm"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"opentofu",children:"OpenTofu"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "OpenTofu": {\n    "complexitychecks": [\n      "count",\n      "for",\n      "for_each",\n      "if",\n      ": ",\n      "? ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "> ",\n      ">= ",\n      "< ",\n      "<= ",\n      "== "\n    ],\n    "extensions": [\n      "tofu"\n    ],\n    "line_comment": [\n      "#",\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"org",children:"Org"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Org": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "org"\n    ],\n    "line_comment": [\n      "# "\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"oz",children:"Oz"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Oz": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "oz"\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"php",children:"PHP"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "PHP": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "php"\n    ],\n    "line_comment": [\n      "#",\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "php",\n      "php5"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"pkgbuild",children:"PKGBUILD"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "PKGBUILD": {\n    "complexitychecks": [],\n    "extensions": [\n      "pkgbuild"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"plsql",children:"PL/SQL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "PL/SQL": {\n    "complexitychecks": [\n      "and ",\n      "and(",\n      "else ",\n      "else(",\n      "elseif ",\n      "elseif(",\n      "if ",\n      "if(",\n      "loop ",\n      "not ",\n      "not(",\n      "or ",\n      "or(",\n      "<> ",\n      "<>(",\n      "= ",\n      "=("\n    ],\n    "extensions": [\n      "fnc",\n      "pkb",\n      "pks",\n      "prc",\n      "trg",\n      "vw"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"prql",children:"PRQL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "PRQL": {\n    "complexitychecks": [\n      "case ",\n      "&& ",\n      "|| ",\n      "!= ",\n      "== ",\n      "~= "\n    ],\n    "extensions": [\n      "prql"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "docString": true,\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      },\n      {\n        "docString": true,\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      },\n      {\n        "docString": true,\n        "end": "\\"\\"\\"",\n        "start": "r\\"\\"\\""\n      },\n      {\n        "docString": true,\n        "end": "\'\'\'",\n        "start": "r\'\'\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"psl-assertion",children:"PSL Assertion"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "PSL Assertion": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "psl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"pascal",children:"Pascal"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Pascal": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "AND ",\n      "OR ",\n      "IF ",\n      "ELSE "\n    ],\n    "extensions": [\n      "pas"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "{",\n        "}"\n      ],\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"patch",children:"Patch"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Patch": {\n    "complexitychecks": [],\n    "extensions": [\n      "patch"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"perl",children:"Perl"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Perl": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "foreach ",\n      "foreach(",\n      "if ",\n      "if(",\n      "elsif ",\n      "elsif(",\n      "while ",\n      "while(",\n      "until ",\n      "until(",\n      "unless ",\n      "unless(",\n      "given ",\n      "given(",\n      "when ",\n      "when(",\n      "catch ",\n      "catch(",\n      "eq ",\n      "ne ",\n      "else ",\n      "and ",\n      "or ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "pl",\n      "plx",\n      "pm"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "=pod",\n        "=cut"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "perl",\n      "perl5"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"phoenix-liveview",children:"Phoenix LiveView"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Phoenix LiveView": {\n    "complexitychecks": [\n      "case ",\n      "cond ",\n      "if ",\n      "for ",\n      "with ",\n      "try ",\n      "catch ",\n      "rescue ",\n      "else ",\n      "and ",\n      "or ",\n      "not ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "|> ",\n      "<% ",\n      "<. "\n    ],\n    "extensions": [\n      "heex",\n      "leex"\n    ],\n    "line_comment": [\n      "#",\n      "\x3c!--"\n    ],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"\\\\\\"\\\\\\"",\n        "start": "\\\\\\"\\\\\\"\\\\\\""\n      },\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"picat",children:"Picat"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Picat": {\n    "complexitychecks": [\n      "do ",\n      "foreach ",\n      "foreach(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "pi"\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"pkl",children:"Pkl"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Pkl": {\n    "complexitychecks": [\n      "function ",\n      "?? ",\n      "?.",\n      "ifNonNull(",\n      "if ",\n      " else ",\n      ".map",\n      "for ",\n      "when ",\n      "..."\n    ],\n    "extensions": [\n      "pkl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "#\\"",\n        "start": "\\"#"\n      },\n      {\n        "end": "##\\"",\n        "start": "\\"##"\n      },\n      {\n        "end": "\\"\\"\\"",\n        "ignoreEscape": true,\n        "start": "\\"\\"\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"plain-text",children:"Plain Text"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Plain Text": {\n    "complexitychecks": [],\n    "extensions": [\n      "text",\n      "txt"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"polly",children:"Polly"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Polly": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "polly"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"pony",children:"Pony"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Pony": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "match ",\n      "repeat",\n      "while ",\n      "else ",\n      "elseif ",\n      "| ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "pony"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\\\\\\"\\\\\\"\\\\\\"",\n        "start": "\\\\\\"\\\\\\"\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"postscript",children:"PostScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "PostScript": {\n    "complexitychecks": [\n      "if",\n      "ifelse",\n      "for",\n      "repeat",\n      "loop",\n      "forall",\n      "pathforall",\n      "eq",\n      "ne",\n      "not",\n      "and",\n      "or"\n    ],\n    "extensions": [\n      "ps"\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "quotes": [\n      {\n        "end": ")",\n        "start": "("\n      },\n      {\n        "end": ">",\n        "start": "<"\n      },\n      {\n        "end": "~>",\n        "start": "<~"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"powershell",children:"Powershell"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Powershell": {\n    "complexitychecks": [\n      "while ",\n      "while(",\n      "until ",\n      "until(",\n      "for ",\n      "for(",\n      "foreach ",\n      "foreach(",\n      "if ",\n      "elseif ",\n      "else ",\n      "switch",\n      "switch(",\n      "-gt",\n      "-lt",\n      "-eq",\n      "-ne",\n      "-ge",\n      "-le",\n      "-in",\n      "-notin",\n      "-contains",\n      "-notcontains"\n    ],\n    "extensions": [\n      "ps1",\n      "psm1"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "<#",\n        "#>"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"processing",children:"Processing"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Processing": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "pde"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"prolog",children:"Prolog"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Prolog": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "p",\n      "pro"\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"properties-file",children:"Properties File"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Properties File": {\n    "complexitychecks": [],\n    "extensions": [\n      "properties"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"protocol-buffers",children:"Protocol Buffers"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Protocol Buffers": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "proto"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"puppet",children:"Puppet"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Puppet": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "pp"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "=begin",\n        "=end"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"purescript",children:"PureScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "PureScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "purs"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "{-",\n        "-}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"python",children:"Python"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Python": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "while ",\n      "while(",\n      "if ",\n      "if(",\n      "elif ",\n      "elif(",\n      "else ",\n      "else:",\n      "match ",\n      "match(",\n      "try ",\n      "try:",\n      "except ",\n      "except:",\n      "finally ",\n      "finally:",\n      "with ",\n      "with (",\n      "and ",\n      "and(",\n      "or ",\n      "or("\n    ],\n    "extensions": [\n      "py",\n      "pyw",\n      "pyi"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "ignoreEscape": true,\n        "end": "\'",\n        "start": "r\'"\n      },\n      {\n        "ignoreEscape": true,\n        "end": "\\"",\n        "start": "r\\""\n      },\n      {\n        "docString": true,\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      },\n      {\n        "docString": true,\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      },\n      {\n        "docString": true,\n        "ignoreEscape": true,\n        "end": "\\"\\"\\"",\n        "start": "r\\"\\"\\""\n      },\n      {\n        "docString": true,\n        "ignoreEscape": true,\n        "end": "\'\'\'",\n        "start": "r\'\'\'"\n      },\n      {\n        "docString": true,\n        "end": "\\"\\"\\"",\n        "start": "f\\"\\"\\""\n      },\n      {\n        "docString": true,\n        "end": "\'\'\'",\n        "start": "f\'\'\'"\n      }\n    ],\n    "shebangs": [\n      "python",\n      "python2",\n      "python3"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"q",children:"Q#"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Q#": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "repeat ",\n      "repeat{",\n      "until (",\n      "until(",\n      "if ",\n      "if(",\n      "elif ",\n      "elif{",\n      "else ",\n      "else{",\n      "||| ",\n      "&&& ",\n      "<<<",\n      ">>>",\n      "^^^",\n      "~~~",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "qs"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"qcl",children:"QCL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "QCL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "qcl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"qml",children:"QML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "QML": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "qml"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"r",children:"R"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "R": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "r"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [],\n    "shebangs": [\n      "Rscript"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"raml",children:"RAML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "RAML": {\n    "complexitychecks": [],\n    "extensions": [\n      "raml",\n      "rml"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"racket",children:"Racket"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Racket": {\n    "complexitychecks": [\n      "(if",\n      "(cond",\n      "[else",\n      "(and",\n      "(or",\n      "(for",\n      "#:when",\n      "#:unless",\n      "#:break",\n      "#:final",\n      "(do",\n      "(when",\n      "(unless",\n      "(shared",\n      "(case"\n    ],\n    "extensions": [\n      "rkt"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [\n      [\n        "|#",\n        "#|"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ],\n    "shebangs": [\n      "racket"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"rakefile",children:"Rakefile"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Rakefile": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [],\n    "filenames": [\n      "rake",\n      "rakefile"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "=begin",\n        "=end"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"raku",children:"Raku"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Raku": {\n    "complexitychecks": [\n      "== ",\n      "\\u2261 ",\n      "!= ",\n      "\\u2260 ",\n      "!== ",\n      "\\u2262 ",\n      "< ",\n      "\\u2282 ",\n      "!< ",\n      "\\u2284 ",\n      "<= ",\n      "\\u2264 ",\n      "\\u2286 ",\n      "!<= ",\n      "\\u2288 ",\n      "> ",\n      "\\u2283 ",\n      "!> ",\n      "\\u2285 ",\n      ">= ",\n      "\\u2265 ",\n      "\\u2287 ",\n      "!>= ",\n      "\\u2289 ",\n      "=~= ",\n      "\\u2245 ",\n      "=== ",\n      "eq ",\n      "!eq ",\n      "eqv ",\n      "ne ",\n      "gt ",\n      "ge ",\n      "lt ",\n      "le ",\n      "=:=",\n      "CATCH ",\n      "CONTROL ",\n      "DOC ",\n      "NEXT ",\n      "and ",\n      "default ",\n      "do {",\n      "else ",\n      "elsif ",\n      "emit ",\n      "for ",\n      "gather ",\n      "given ",\n      "if ",\n      "last ",\n      "loop (",\n      "next ",\n      "once ",\n      "or ",\n      "orwith ",\n      "react {",\n      "redo ",\n      "repeat ",\n      "start {",\n      "supply ",\n      "unless ",\n      "until ",\n      "when ",\n      "whenever ",\n      "while ",\n      "with ",\n      "without "\n    ],\n    "extensions": [\n      "raku",\n      "rakumod",\n      "rakutest",\n      "rakudoc",\n      "t"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "=begin",\n        "=end"\n      ],\n      [\n        "#`(",\n        ")"\n      ],\n      [\n        "#`[",\n        "]"\n      ],\n      [\n        "#`{",\n        "}"\n      ],\n      [\n        "#`\\uff62",\n        "\\uff63"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\u201c",\n        "start": "\\u201e"\n      },\n      {\n        "end": "\\u00bb",\n        "start": "\\u00ab"\n      },\n      {\n        "end": ">>",\n        "start": "<<"\n      },\n      {\n        "end": "\\u201d",\n        "start": "\\u201c"\n      },\n      {\n        "end": "\\u2018",\n        "start": "\\u2019"\n      },\n      {\n        "end": "\\uff63",\n        "start": "\\uff62"\n      }\n    ],\n    "shebangs": [\n      "raku"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"razor",children:"Razor"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Razor": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cshtml",\n      "razor"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ],\n      [\n        "@*",\n        "*@"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"rescript",children:"ReScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ReScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "=== "\n    ],\n    "extensions": [\n      "res",\n      "resi"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"restructuredtext",children:"ReStructuredText"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ReStructuredText": {\n    "complexitychecks": [],\n    "extensions": [\n      "rst"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"reasonml",children:"ReasonML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ReasonML": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "re",\n      "rei"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"redscript",children:"Redscript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Redscript": {\n    "complexitychecks": [\n      "for ",\n      "@if(",\n      "switch ",\n      "while ",\n      "else ",\n      "func ",\n      "-> "\n    ],\n    "extensions": [\n      "reds"\n    ],\n    "line_comment": [\n      "//",\n      "///"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"report-definition-language",children:"Report Definition Language"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Report Definition Language": {\n    "complexitychecks": [],\n    "extensions": [\n      "rdl"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"robot-framework",children:"Robot Framework"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Robot Framework": {\n    "complexitychecks": [],\n    "extensions": [\n      "robot"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ruby",children:"Ruby"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Ruby": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "rb"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "=begin",\n        "=end"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "ruby"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ruby-html",children:"Ruby HTML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Ruby HTML": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "rhtml",\n      "erb"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"rust",children:"Rust"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Rust": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "match "\n    ],\n    "extensions": [\n      "rs"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"sas",children:"SAS"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SAS": {\n    "complexitychecks": [\n      "do",\n      "%do",\n      "if",\n      "%if",\n      "else",\n      "%else",\n      "case",\n      "or",\n      "and",\n      "^=",\n      "\\u00ac=",\n      "~=",\n      "ne",\n      "eq"\n    ],\n    "extensions": [\n      "sas"\n    ],\n    "line_comment": [\n      "*"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"skill",children:"SKILL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SKILL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "il"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"snobol",children:"SNOBOL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SNOBOL": {\n    "complexitychecks": [\n      ":(",\n      ":s(",\n      ":f(",\n      "eq ",\n      "ne "\n    ],\n    "extensions": [\n      "sno"\n    ],\n    "line_comment": [\n      "*"\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"spdx",children:"SPDX"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SPDX": {\n    "complexitychecks": [],\n    "extensions": [\n      "spdx"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"spl",children:"SPL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SPL": {\n    "complexitychecks": [\n      "construct",\n      "foreach",\n      "map",\n      "while",\n      "if",\n      "include",\n      "catch",\n      "and",\n      "or",\n      "not",\n      "call",\n      "<|",\n      "<{",\n      "dup",\n      "swap"\n    ],\n    "extensions": [\n      "spl"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\\"",\n        "\\";"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": " ",\n        "start": "^"\n      },\n      {\n        "end": ">",\n        "start": "^"\n      },\n      {\n        "end": ":",\n        "start": "^"\n      }\n    ],\n    "shebangs": [\n      "spl"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"sql",children:"SQL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SQL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "sql",\n      "dml",\n      "ddl",\n      "dql"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"srecode-template",children:"SRecode Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SRecode Template": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "srt"\n    ],\n    "line_comment": [\n      ";;"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"svg",children:"SVG"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SVG": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "svg"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"sass",children:"Sass"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Sass": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "sass",\n      "scss"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"scala",children:"Scala"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Scala": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      ">= ",\n      "> ",\n      "<= ",\n      "< "\n    ],\n    "extensions": [\n      "sc",\n      "scala"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"scallop",children:"Scallop"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Scallop": {\n    "complexitychecks": [\n      "rel ",\n      "count(",\n      "sum(",\n      "prod(",\n      "min(",\n      "max(",\n      "exists(",\n      "forall(",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      ">= ",\n      "> ",\n      "<= ",\n      "< "\n    ],\n    "extensions": [\n      "scl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"scheme",children:"Scheme"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Scheme": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "scm",\n      "ss"\n    ],\n    "line_comment": [\n      ";"\n    ],\n    "multi_line": [\n      [\n        "#|",\n        "|#"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [],\n    "shebangs": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"scons",children:"Scons"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Scons": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "csig",\n      "sconstruct",\n      "sconscript"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\\\\\"\\\\\\"\\\\\\"",\n        "start": "\\\\\\"\\\\\\"\\\\\\""\n      },\n      {\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"shell",children:"Shell"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Shell": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "sh"\n    ],\n    "filenames": [\n      ".tcshrc"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "sh"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"sieve",children:"Sieve"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Sieve": {\n    "complexitychecks": [\n      "if",\n      "if ",\n      "elsif",\n      "elsif ",\n      "allof",\n      "allof ",\n      "anyof",\n      "anyof ",\n      "allof(",\n      "anyof("\n    ],\n    "extensions": [\n      "sieve"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"slang",children:"Slang"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Slang": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "slang"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"slint",children:"Slint"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Slint": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "if(",\n      "states ",\n      "states[",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "slint"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"smalltalk",children:"Smalltalk"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Smalltalk": {\n    "complexitychecks": [\n      "bitAnd ",\n      "bitOr ",\n      "bitXor ",\n      "bitInvert ",\n      "bitShift ",\n      "bitAt ",\n      "highbit ",\n      "allMask ",\n      "anyMask ",\n      "noMask ",\n      "ifTrue ",\n      "ifFalse ",\n      "switch ",\n      "whileTrue ",\n      "whileFalse ",\n      "to: "\n    ],\n    "extensions": [\n      "cs.st",\n      "pck.st"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\\"",\n        "\\""\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"smarty-template",children:"Smarty Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Smarty Template": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "include "\n    ],\n    "extensions": [\n      "tpl"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "{*",\n        "*}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"snakemake",children:"Snakemake"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Snakemake": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "while ",\n      "while(",\n      "if ",\n      "if(",\n      "elif ",\n      "elif(",\n      "else ",\n      "else:",\n      "match ",\n      "match(",\n      "try ",\n      "try:",\n      "except ",\n      "except(",\n      "finally ",\n      "finally:",\n      "with ",\n      "with (",\n      "and ",\n      "and(",\n      "or ",\n      "or("\n    ],\n    "extensions": [\n      "smk",\n      "rules"\n    ],\n    "filenames": [\n      "snakefile"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "docString": true,\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      },\n      {\n        "docString": true,\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      },\n      {\n        "docString": true,\n        "end": "\\"\\"\\"",\n        "start": "r\\"\\"\\""\n      },\n      {\n        "docString": true,\n        "end": "\'\'\'",\n        "start": "r\'\'\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"softbridge-basic",children:"Softbridge Basic"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Softbridge Basic": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "elseif ",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "sbl"\n    ],\n    "line_comment": [\n      "\'"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"solidity",children:"Solidity"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Solidity": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== ",\n      "assembly ",\n      "assembly{",\n      "unchecked ",\n      "unchecked{"\n    ],\n    "extensions": [\n      "sol"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"specman-e",children:"Specman e"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Specman e": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "e"\n    ],\n    "line_comment": [\n      "--",\n      "//"\n    ],\n    "multi_line": [\n      [\n        "\'>",\n        "<\'"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"spice-netlist",children:"Spice Netlist"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Spice Netlist": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ckt"\n    ],\n    "line_comment": [\n      "*"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"stan",children:"Stan"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Stan": {\n    "complexitychecks": [],\n    "extensions": [\n      "stan"\n    ],\n    "line_comment": [\n      "#",\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"standard-ml-sml",children:"Standard ML (SML)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Standard ML (SML)": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "sml"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"stata",children:"Stata"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Stata": {\n    "complexitychecks": [\n      "foreach",\n      "forvalues",\n      "if",\n      "else",\n      "while",\n      "switch",\n      "|",\n      "&",\n      "!=",\n      "=="\n    ],\n    "extensions": [\n      "do",\n      "ado"\n    ],\n    "line_comment": [\n      "//",\n      "*"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\\"\'",\n        "start": "`\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"stylus",children:"Stylus"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Stylus": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "unless ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "styl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"svelte",children:"Svelte"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Svelte": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "svelte"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ],\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"swift",children:"Swift"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Swift": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "catch ",\n      "guard ",\n      "?",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "swift"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"swig",children:"Swig"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Swig": {\n    "complexitychecks": [],\n    "extensions": [\n      "i"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"systemverilog",children:"SystemVerilog"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "SystemVerilog": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "| ",\n      "& ",\n      "!= ",\n      "!== ",\n      "== ",\n      "foreach ",\n      "foreach(",\n      "case ",\n      "case(",\n      "casex ",\n      "casex(",\n      "casez ",\n      "casez(",\n      "casexz ",\n      "casexz(",\n      "fork ",\n      " ? ",\n      "inside",\n      "with",\n      "event "\n    ],\n    "extensions": [\n      "sv",\n      "svh"\n    ],\n    "keywords": [\n      "endmodule",\n      "posedge",\n      "edge",\n      "always",\n      "wire"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"systemd",children:"Systemd"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Systemd": {\n    "complexitychecks": [],\n    "extensions": [\n      "automount",\n      "device",\n      "link",\n      "mount",\n      "path",\n      "scope",\n      "service",\n      "slice",\n      "socket",\n      "swap",\n      "target",\n      "timer"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"tcl",children:"TCL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TCL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "tcl"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "tcl"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"tl",children:"TL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TL": {\n    "complexitychecks": [],\n    "extensions": [\n      "tl"\n    ],\n    "line_comment": [\n      "//",\n      "///"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"toml",children:"TOML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TOML": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "toml"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\\\\\"\\\\\\"\\\\\\"",\n        "start": "\\\\\\"\\\\\\"\\\\\\""\n      },\n      {\n        "end": "\'\'\'",\n        "start": "\'\'\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ttcn-3",children:"TTCN-3"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TTCN-3": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "from ",\n      "if ",\n      "if(",\n      "select ",\n      "case ",\n      "while ",\n      "do ",\n      "goto ",\n      "stop ",\n      "break ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ttcn",\n      "ttcn3",\n      "ttcnpp"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"tact",children:"Tact"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Tact": {\n    "complexitychecks": [\n      "if ",\n      "if(",\n      "else ",\n      "try ",\n      "catch ",\n      "catch(",\n      "repeat ",\n      "repeat(",\n      "while ",\n      "while(",\n      "do ",\n      "until ",\n      "until(",\n      "foreach ",\n      "foreach(",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "tact"\n    ],\n    "line_comment": [\n      "//",\n      "///"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"taskpaper",children:"TaskPaper"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TaskPaper": {\n    "complexitychecks": [],\n    "extensions": [\n      "taskpaper"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"tex",children:"TeX"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TeX": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "tex",\n      "sty"\n    ],\n    "line_comment": [\n      "%"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"teal",children:"Teal"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Teal": {\n    "complexitychecks": [\n      "loop:",\n      "retsub",\n      "callsub ",\n      "&&",\n      "==",\n      "||",\n      "<=",\n      ">="\n    ],\n    "extensions": [\n      "teal"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"templ",children:"Templ"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Templ": {\n    "complexitychecks": [\n      "if ",\n      " else ",\n      "switch ",\n      "case ",\n      "default:",\n      "for ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "templ"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "`",\n        "ignoreEscape": true,\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"templatetoolkit",children:"TemplateToolkit"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TemplateToolkit": {\n    "complexitychecks": [\n      "[% BLOCK",\n      "[% FILTER",\n      "[% FOR",\n      "[% FOREACH",\n      "[% IF",\n      "[% INCLUDE",\n      "[% MACRO",\n      "[% PROCESS",\n      "[% SWITCH",\n      "[% UNLESS",\n      "[% WRAPPER"\n    ],\n    "extensions": [\n      "tt",\n      "tt2"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "[%#",\n        "%]"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"tera",children:"Tera"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Tera": {\n    "complexitychecks": [\n      "{% include ",\n      "{% macro ",\n      "{% block ",\n      "{% extends ",\n      "{% for ",\n      "{% set ",\n      "{% if ",\n      "{% elif ",\n      "{% else "\n    ],\n    "extensions": [\n      "tera"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ],\n      [\n        "{#",\n        "#}"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"terraform",children:"Terraform"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Terraform": {\n    "complexitychecks": [\n      "count",\n      "for",\n      "for_each",\n      "if",\n      ": ",\n      "? ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "> ",\n      ">= ",\n      "< ",\n      "<= ",\n      "== "\n    ],\n    "extensions": [\n      "tf",\n      "tfvars",\n      "tf.json"\n    ],\n    "line_comment": [\n      "#",\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"textile",children:"Textile"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Textile": {\n    "complexitychecks": [],\n    "extensions": [\n      "textile"\n    ],\n    "line_comment": [\n      "###. "\n    ],\n    "multi_line": [\n      [\n        "###.. ",\n        "p. "\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"thrift",children:"Thrift"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Thrift": {\n    "complexitychecks": [],\n    "extensions": [\n      "thrift"\n    ],\n    "line_comment": [\n      "//",\n      "#"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"treetop",children:"Treetop"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Treetop": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "treetop",\n      "tt"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"twig-template",children:"Twig Template"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Twig Template": {\n    "complexitychecks": [\n      "{% for ",\n      "{% if ",\n      "{% else ",\n      "{% elseif "\n    ],\n    "extensions": [\n      "twig"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TypeScript": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "!== ",\n      "== ",\n      "=== ",\n      "case ",\n      "case(",\n      "?.",\n      "?? ",\n      "??= "\n    ],\n    "extensions": [\n      "ts",\n      "tsx"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "`",\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"typescript-typings",children:"TypeScript Typings"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TypeScript Typings": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "!== ",\n      "== ",\n      "=== ",\n      "case ",\n      "case(",\n      "?.",\n      "?? ",\n      "??= "\n    ],\n    "extensions": [\n      "d.ts"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "`",\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"typespec",children:"TypeSpec"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "TypeSpec": {\n    "complexitychecks": [],\n    "extensions": [\n      "tsp"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\\"\\"\\"",\n        "ignoreEscape": true,\n        "start": "\\"\\"\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"typst",children:"Typst"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Typst": {\n    "extensions": [\n      "typ"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"unreal-script",children:"Unreal Script"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Unreal Script": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "uc",\n      "uci",\n      "upkg"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"up",children:"Up"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Up": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "switch ",\n      "while ",\n      "else ",\n      "try ",\n      "func ",\n      "up ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "up"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "`",\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"urweb",children:"Ur/Web"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Ur/Web": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "ur",\n      "urs"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"urweb-project",children:"Ur/Web Project"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Ur/Web Project": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "urp"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"v",children:"V"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "V": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "v"\n    ],\n    "keywords": [\n      "break",\n      "const ",\n      "continue",\n      "defer",\n      "else ",\n      "enum",\n      "fn ",\n      "goto",\n      "import ",\n      "in ",\n      "interface",\n      "match",\n      "mut",\n      "println",\n      "pub",\n      "return",\n      "struct ",\n      "type "\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "`",\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"vhdl",children:"VHDL"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "VHDL": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "vhd",\n      "vhdl"\n    ],\n    "keywords": [\n      "abs",\n      "access",\n      "after",\n      "alias",\n      "all",\n      "and",\n      "architecture",\n      "array",\n      "assert",\n      "attribute",\n      "begin",\n      "block",\n      "body",\n      "buffer",\n      "bus",\n      "case",\n      "component",\n      "configuration",\n      "constant",\n      "disconnect",\n      "downto",\n      "else",\n      "elsif",\n      "end",\n      "entity",\n      "exit",\n      "file",\n      "for",\n      "function",\n      "generate",\n      "generic",\n      "group",\n      "guarded",\n      "if",\n      "impure",\n      "in",\n      "inertial",\n      "inout",\n      "is",\n      "label",\n      "library",\n      "linkage",\n      "literal",\n      "loop",\n      "map",\n      "mod",\n      "nand",\n      "new",\n      "next",\n      "nor",\n      "not",\n      "null",\n      "of",\n      "on",\n      "open",\n      "or",\n      "others",\n      "out",\n      "package",\n      "port",\n      "postponed",\n      "procedure",\n      "process",\n      "pure",\n      "range",\n      "record",\n      "register",\n      "reject",\n      "rem",\n      "report",\n      "return",\n      "rol",\n      "ror",\n      "select",\n      "severity",\n      "shared",\n      "signal",\n      "sla",\n      "sll",\n      "sra",\n      "srl",\n      "subtype",\n      "then",\n      "to",\n      "transport",\n      "type",\n      "unaffected",\n      "units",\n      "until",\n      "use",\n      "variable",\n      "wait",\n      "when",\n      "while",\n      "with",\n      "xnor",\n      "xor"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"vala",children:"Vala"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Vala": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "foreach ",\n      "foreach(",\n      "if ",\n      "if(",\n      "switch ",\n      "switch(",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "vala"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\\"",\n        "start": "@\\""\n      },\n      {\n        "ignoreEscape": true,\n        "end": "\\"\\"\\"",\n        "start": "\\"\\"\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"varnish-configuration",children:"Varnish Configuration"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Varnish Configuration": {\n    "complexitychecks": [],\n    "extensions": [\n      "vcl"\n    ],\n    "line_comment": [\n      "#",\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"verilog",children:"Verilog"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Verilog": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "vg",\n      "vh",\n      "v"\n    ],\n    "keywords": [\n      "module",\n      "endmodule",\n      "timescale",\n      "input",\n      "output",\n      "reg",\n      "wire",\n      "posedge",\n      "negedge",\n      "always",\n      "begin",\n      "switch",\n      "case",\n      "end",\n      "endcase",\n      "else",\n      "localparam",\n      "initial",\n      "signed",\n      "assign",\n      "generate",\n      "genvar"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"verilog-args-file",children:"Verilog Args File"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Verilog Args File": {\n    "complexitychecks": [],\n    "extensions": [\n      "irunargs",\n      "xrunargs"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"vertex-shader-file",children:"Vertex Shader File"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Vertex Shader File": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "vsh"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"vim-script",children:"Vim Script"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Vim Script": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "vim",\n      "vimrc",\n      "gvimrc"\n    ],\n    "filenames": [\n      "_vimrc",\n      ".vimrc",\n      "_gvimrc",\n      ".gvimrc",\n      "vimrc",\n      "gvimrc"\n    ],\n    "line_comment": [\n      "\\"",\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"visual-basic",children:"Visual Basic"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Visual Basic": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "elseif ",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "vb"\n    ],\n    "line_comment": [\n      "\'"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"visual-basic-for-applications",children:"Visual Basic for Applications"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Visual Basic for Applications": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "elseif ",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "cls"\n    ],\n    "line_comment": [\n      "\'"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"vue",children:"Vue"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Vue": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "vue"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ],\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"wise-jobfile",children:"W.I.S.E. Jobfile"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "W.I.S.E. Jobfile": {\n    "complexitychecks": [],\n    "extensions": [\n      "fgmj"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"web-services-description-language",children:"Web Services Description Language"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Web Services Description Language": {\n    "extensions": [\n      "wsdl"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"webgpu-shading-language",children:"WebGPU Shading Language"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "WebGPU Shading Language": {\n    "complexitychecks": [\n      "for (",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "while(",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "wgsl"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"windows-resource-definition-script",children:"Windows Resource-Definition Script"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Windows Resource-Definition Script": {\n    "extensions": [\n      "rc"\n    ],\n    "keywords": [\n      "#include",\n      "#define",\n      "RC_INVOKED",\n      "VERSIONINFO",\n      "FILEVERSION",\n      "PRODUCTVERSION",\n      "FILEOS",\n      "FILETYPE",\n      "BLOCK",\n      "VALUE",\n      "StringFileInfo",\n      "VarFileInfo"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"wolfram",children:"Wolfram"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Wolfram": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "nb",\n      "wl"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "(*",\n        "*)"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"wren",children:"Wren"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Wren": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "wren"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"xaml",children:"XAML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "XAML": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "xaml"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"xml",children:"XML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "XML": {\n    "extensions": [\n      "xml"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"xml-schema",children:"XML Schema"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "XML Schema": {\n    "complexitychecks": [],\n    "extensions": [\n      "xsd"\n    ],\n    "line_comment": [],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"xmake",children:"XMake"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "XMake": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "while ",\n      "while(",\n      "else ",\n      "else(",\n      "elseif ",\n      "elseif(",\n      "until ",\n      "until(",\n      "or ",\n      "and ",\n      "~= ",\n      "== "\n    ],\n    "extensions": [],\n    "filenames": [\n      "xmake.lua",\n      "xpack.lua"\n    ],\n    "line_comment": [\n      "--"\n    ],\n    "multi_line": [\n      [\n        "--[[",\n        "]]"\n      ],\n      [\n        "--[=[",\n        "]=]"\n      ],\n      [\n        "--[==[",\n        "]==]"\n      ],\n      [\n        "--[===[",\n        "]===]"\n      ],\n      [\n        "--[====[",\n        "]====]"\n      ],\n      [\n        "--[=====[",\n        "]=====]"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "[[",\n        "start": "]]",\n        "ignoreEscape": true\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"xcode-config",children:"Xcode Config"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Xcode Config": {\n    "complexitychecks": [],\n    "extensions": [\n      "xcconfig"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"xtend",children:"Xtend"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Xtend": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "xtend"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"yaml",children:"YAML"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "YAML": {\n    "complexitychecks": [],\n    "extensions": [\n      "yaml",\n      "yml"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"yarn",children:"Yarn"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Yarn": {\n    "complexitychecks": [\n      "<<if ",\n      "<<elseif ",\n      "<<else ",\n      " eq ",\n      " == ",\n      " neq ",\n      " ! ",\n      " gt ",\n      " > ",\n      " lt ",\n      " < ",\n      " lte ",\n      " <= ",\n      " gte ",\n      " >= ",\n      " xor ",\n      " ^ ",\n      " and ",\n      " && ",\n      " || ",\n      " or "\n    ],\n    "extensions": [\n      "yarn"\n    ],\n    "line_comment": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"zig",children:"Zig"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Zig": {\n    "complexitychecks": [\n      "catch ",\n      "while ",\n      "for ",\n      "if ",\n      "else ",\n      "errdefer ",\n      "try ",\n      "switch ",\n      "orelse ",\n      "||",\n      "&&",\n      "!=",\n      "=="\n    ],\n    "extensions": [\n      "zig"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\\n",\n        "start": "\\\\\\\\"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"zokrates",children:"ZoKrates"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ZoKrates": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "zok"\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"zsh",children:"Zsh"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "Zsh": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "|| ",\n      "&& ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "zsh",\n      "zshenv",\n      "zlogin",\n      "zlogout",\n      "zprofile",\n      "zshrc"\n    ],\n    "filenames": [\n      ".zshenv",\n      ".zlogin",\n      ".zlogout",\n      ".zprofile",\n      ".zshrc"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\\\\\"",\n        "start": "\\\\\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      }\n    ],\n    "shebangs": [\n      "zsh"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"bait",children:"bait"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "bait": {\n    "complexitychecks": [\n      "for ",\n      "if ",\n      "else ",\n      " or ",\n      " and ",\n      "!= ",\n      "== "\n    ],\n    "extensions": [\n      "bt"\n    ],\n    "keywords": [\n      "and",\n      "break",\n      "const ",\n      "continue",\n      "else ",\n      "fun ",\n      "import ",\n      "not ",\n      "or ",\n      "package ",\n      "return",\n      "struct "\n    ],\n    "line_comment": [\n      "//"\n    ],\n    "multi_line": [\n      [\n        "/*",\n        "*/"\n      ]\n    ],\n    "nestedmultiline": true,\n    "quotes": [\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "`",\n        "start": "`"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"gitignore",children:"gitignore"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "gitignore": {\n    "complexitychecks": [],\n    "extensions": [],\n    "filenames": [\n      ".gitignore"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"hoon",children:"hoon"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "hoon": {\n    "complexitychecks": [\n      "%+  turn",\n      "(turn ",\n      "%+  roll",\n      "(roll ",\n      "%+  reel",\n      "(reel ",\n      "|.  ",\n      "|.(",\n      "|-  ",\n      "|-(",\n      "|?  ",\n      "|?(",\n      "?|  ",\n      "?|(",\n      "|(",\n      "?-  ",\n      "?-(",\n      "?:  ",\n      "?:(",\n      "?.  ",\n      "?.(",\n      "?^  ",\n      "?^(",\n      "?<  ",\n      "?<(",\n      "?>  ",\n      "?>(",\n      "?+  ",\n      "?+(",\n      "?&  ",\n      "?&(",\n      "&(",\n      "?@  ",\n      "?@(",\n      "?~  ",\n      "?~(",\n      "?=  ",\n      "?=(",\n      ".=  ",\n      "=(",\n      "!=("\n    ],\n    "extensions": [\n      "hoon"\n    ],\n    "line_comment": [\n      "::"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      },\n      {\n        "end": "\'",\n        "start": "\'"\n      },\n      {\n        "end": "```",\n        "start": "```"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"ignore",children:"ignore"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "ignore": {\n    "complexitychecks": [],\n    "extensions": [],\n    "filenames": [\n      ".ignore"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"jq",children:"jq"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "jq": {\n    "complexitychecks": [\n      ".",\n      "if ",\n      "elif ",\n      "else ",\n      "!= ",\n      "== ",\n      ">= ",\n      "<= ",\n      "< ",\n      "> ",\n      "and ",\n      "or ",\n      "not ",\n      "// ",\n      "try ",\n      "break "\n    ],\n    "extensions": [\n      "jq"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"m4",children:"m4"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "m4": {\n    "complexitychecks": [],\n    "extensions": [\n      "m4"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": []\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"nuspec",children:"nuspec"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "nuspec": {\n    "extensions": [\n      "nuspec"\n    ],\n    "line_comment": [],\n    "multi_line": [\n      [\n        "\x3c!--",\n        "--\x3e"\n      ]\n    ],\n    "quotes": [\n      {\n        "end": "\\"",\n        "start": "\\""\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"sed",children:"sed"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "sed": {\n    "complexitychecks": [\n      "for ",\n      "for(",\n      "if ",\n      "if(",\n      "switch ",\n      "while ",\n      "else ",\n      "and ",\n      "or ",\n      "not ",\n      "in "\n    ],\n    "extensions": [\n      "sed"\n    ],\n    "line_comment": [\n      "#"\n    ],\n    "multi_line": [],\n    "quotes": [],\n    "shebangs": [\n      "sed"\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"wenyan",children:"wenyan"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "wenyan": {\n    "complexitychecks": [\n      "\\u82e5",\n      "\\u82e5\\u975e",\n      "\\u7b49\\u65bc",\n      "\\u4e0d\\u7b49\\u65bc",\n      "\\u4e0d\\u5927\\u65bc",\n      "\\u4e0d\\u5c0f\\u65bc",\n      "\\u5927\\u65bc",\n      "\\u5c0f\\u65bc",\n      "\\u51e1",\n      "\\u70ba\\u662f",\n      "\\u6046\\u70ba\\u662f",\n      "\\u4e2d\\u4e4b",\n      "\\u904d"\n    ],\n    "extensions": [\n      "wy"\n    ],\n    "line_comment": [\n      "\\u6279\\u66f0",\n      "\\u6ce8\\u66f0",\n      "\\u758f\\u66f0"\n    ],\n    "multi_line": [],\n    "quotes": [\n      {\n        "end": "\\u300c\\u300c",\n        "start": "\\u300d\\u300d"\n      }\n    ]\n  }\n}\n'})})]})}function h(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,l)=>{l.d(e,{R:()=>t,x:()=>o});var i=l(6540);const s={},c=i.createContext(s);function t(n){const e=i.useContext(c);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),i.createElement(c.Provider,{value:e},n.children)}}}]);